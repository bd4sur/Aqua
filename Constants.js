
// 常数和表格

const GRANULE_LENGTH = 576;
const GRANULES_PER_FRAME = 2;
const FRAME_LENGTH = 1152;

const BIT_RATES = [64000, 128000, 224000, 320000]; // 作为原理验证，仅支持4种码率

const BIT_RATE_INDEX = ["0101", "1001", "1100", "1110"];

const BIT_RATE_64K  = 0;
const BIT_RATE_128K = 1;
const BIT_RATE_224K = 2;
const BIT_RATE_320K = 3;

const SAMPLE_RATES = [32000, 44100, 48000];

const SAMPLE_RATE_INDEX = ["10", "00", "01"];

/** 用于表格索引 */
const SAMPLE_RATE_32000 = 0;
const SAMPLE_RATE_44100 = 1;
const SAMPLE_RATE_48000 = 2;

const LONG_BLOCK  = 0;
const SHORT_BLOCK = 1;

const WINDOW_NORMAL = 0;
const WINDOW_START  = 1;
const WINDOW_SHORT  = 2;
const WINDOW_STOP   = 3;

// const SYSTEM_CONSTANT = 8; // Subclause 2.4.3.4.7.1 @ p.35


/**
 * @description 尺度因子长度的编码
 * @reference 2.4.2.7(p26)
 */
const SF_COMPRESS = [
// slen2= 0   1   2   3
        [ 0,  1,  2,  3], // slen1 = 0
        [-1,  5,  6,  7], // slen1 = 1
        [-1,  8,  9, 10], // slen1 = 2
        [ 4, 11, 12, 13], // slen1 = 3
        [-1, -1, 14, 15], // slen1 = 4
];
const SF_COMPRESS_INDEX = [
    [0, 0], // 00
    [0, 1], // 01
    [0, 2], // 02
    [0, 3], // 03
    [3, 0], // 04
    [1, 1], // 05
    [1, 2], // 06
    [1, 3], // 07
    [2, 1], // 08
    [2, 2], // 09
    [2, 3], // 10
    [3, 1], // 11
    [3, 2], // 12
    [3, 3], // 13
    [4, 2], // 14
    [4, 3]  // 15
];


/**
 * @description 分析子带滤波器的窗口系数
 * @reference Table.C.1(p68-69)
 */
const ANALYSIS_SUBBAND_FILTER_WINDOW_COEFFICIENTS = [
    0.000000000 , -0.000000477 , -0.000000477 , -0.000000477 ,
   -0.000000477 , -0.000000477 , -0.000000477 , -0.000000954 ,
   -0.000000954 , -0.000000954 , -0.000000954 , -0.000001431 ,
   -0.000001431 , -0.000001907 , -0.000001907 , -0.000002384 ,
   -0.000002384 , -0.000002861 , -0.000003338 , -0.000003338 ,
   -0.000003815 , -0.000004292 , -0.000004768 , -0.000005245 ,
   -0.000006199 , -0.000006676 , -0.000007629 , -0.000008106 ,
   -0.000009060 , -0.000010014 , -0.000011444 , -0.000012398 ,
   -0.000013828 , -0.000014782 , -0.000016689 , -0.000018120 ,
   -0.000019550 , -0.000021458 , -0.000023365 , -0.000025272 ,
   -0.000027657 , -0.000030041 , -0.000032425 , -0.000034809 ,
   -0.000037670 , -0.000040531 , -0.000043392 , -0.000046253 ,
   -0.000049591 , -0.000052929 , -0.000055790 , -0.000059605 ,
   -0.000062943 , -0.000066280 , -0.000070095 , -0.000073433 ,
   -0.000076771 , -0.000080585 , -0.000083923 , -0.000087261 ,
   -0.000090599 , -0.000093460 , -0.000096321 , -0.000099182 ,
    0.000101566 ,  0.000103951 ,  0.000105858 ,  0.000107288 ,
    0.000108242 ,  0.000108719 ,  0.000108719 ,  0.000108242 ,
    0.000106812 ,  0.000105381 ,  0.000102520 ,  0.000099182 ,
    0.000095367 ,  0.000090122 ,  0.000084400 ,  0.000077724 ,
    0.000069618 ,  0.000060558 ,  0.000050545 ,  0.000039577 ,
    0.000027180 ,  0.000013828 , -0.000000954 , -0.000017166 ,
   -0.000034332 , -0.000052929 , -0.000072956 , -0.000093937 ,
   -0.000116348 , -0.000140190 , -0.000165462 , -0.000191212 ,
   -0.000218868 , -0.000247478 , -0.000277042 , -0.000307560 ,
   -0.000339031 , -0.000371456 , -0.000404358 , -0.000438213 ,
   -0.000472546 , -0.000507355 , -0.000542164 , -0.000576973 ,
   -0.000611782 , -0.000646591 , -0.000680923 , -0.000714302 ,
   -0.000747204 , -0.000779152 , -0.000809669 , -0.000838757 ,
   -0.000866413 , -0.000891685 , -0.000915051 , -0.000935555 ,
   -0.000954151 , -0.000968933 , -0.000980854 , -0.000989437 ,
   -0.000994205 , -0.000995159 , -0.000991821 , -0.000983715 ,
    0.000971317 ,  0.000953674 ,  0.000930786 ,  0.000902653 ,
    0.000868797 ,  0.000829220 ,  0.000783920 ,  0.000731945 ,
    0.000674248 ,  0.000610352 ,  0.000539303 ,  0.000462532 ,
    0.000378609 ,  0.000288486 ,  0.000191689 ,  0.000088215 ,
   -0.000021458 , -0.000137329 , -0.000259876 , -0.000388145 ,
   -0.000522137 , -0.000661850 , -0.000806808 , -0.000956535 ,
   -0.001111031 , -0.001269817 , -0.001432419 , -0.001597881 ,
   -0.001766682 , -0.001937389 , -0.002110004 , -0.002283096 ,
   -0.002457142 , -0.002630711 , -0.002803326 , -0.002974033 ,
   -0.003141880 , -0.003306866 , -0.003467083 , -0.003622532 ,
   -0.003771782 , -0.003914356 , -0.004048824 , -0.004174709 ,
   -0.004290581 , -0.004395962 , -0.004489899 , -0.004570484 ,
   -0.004638195 , -0.004691124 , -0.004728317 , -0.004748821 ,
   -0.004752159 , -0.004737377 , -0.004703045 , -0.004649162 ,
   -0.004573822 , -0.004477024 , -0.004357815 , -0.004215240 ,
   -0.004049301 , -0.003858566 , -0.003643036 , -0.003401756 ,
    0.003134727 ,  0.002841473 ,  0.002521515 ,  0.002174854 ,
    0.001800537 ,  0.001399517 ,  0.000971317 ,  0.000515938 ,
    0.000033379 , -0.000475883 , -0.001011848 , -0.001573563 ,
   -0.002161503 , -0.002774239 , -0.003411293 , -0.004072189 ,
   -0.004756451 , -0.005462170 , -0.006189346 , -0.006937027 ,
   -0.007703304 , -0.008487225 , -0.009287834 , -0.010103703 ,
   -0.010933399 , -0.011775017 , -0.012627602 , -0.013489246 ,
   -0.014358521 , -0.015233517 , -0.016112804 , -0.016994476 ,
   -0.017876148 , -0.018756866 , -0.019634247 , -0.020506859 ,
   -0.021372318 , -0.022228718 , -0.023074150 , -0.023907185 ,
   -0.024725437 , -0.025527000 , -0.026310921 , -0.027073860 ,
   -0.027815342 , -0.028532982 , -0.029224873 , -0.029890060 ,
   -0.030526638 , -0.031132698 , -0.031706810 , -0.032248020 ,
   -0.032754898 , -0.033225536 , -0.033659935 , -0.034055710 ,
   -0.034412861 , -0.034730434 , -0.035007000 , -0.035242081 ,
   -0.035435200 , -0.035586357 , -0.035694122 , -0.035758972 ,
    0.035780907 ,  0.035758972 ,  0.035694122 ,  0.035586357 ,
    0.035435200 ,  0.035242081 ,  0.035007000 ,  0.034730434 ,
    0.034412861 ,  0.034055710 ,  0.033659935 ,  0.033225536 ,
    0.032754898 ,  0.032248020 ,  0.031706810 ,  0.031132698 ,
    0.030526638 ,  0.029890060 ,  0.029224873 ,  0.028532982 ,
    0.027815342 ,  0.027073860 ,  0.026310921 ,  0.025527000 ,
    0.024725437 ,  0.023907185 ,  0.023074150 ,  0.022228718 ,
    0.021372318 ,  0.020506859 ,  0.019634247 ,  0.018756866 ,
    0.017876148 ,  0.016994476 ,  0.016112804 ,  0.015233517 ,
    0.014358521 ,  0.013489246 ,  0.012627602 ,  0.011775017 ,
    0.010933399 ,  0.010103703 ,  0.009287834 ,  0.008487225 ,
    0.007703304 ,  0.006937027 ,  0.006189346 ,  0.005462170 ,
    0.004756451 ,  0.004072189 ,  0.003411293 ,  0.002774239 ,
    0.002161503 ,  0.001573563 ,  0.001011848 ,  0.000475883 ,
   -0.000033379 , -0.000515938 , -0.000971317 , -0.001399517 ,
   -0.001800537 , -0.002174854 , -0.002521515 , -0.002841473 ,
    0.003134727 ,  0.003401756 ,  0.003643036 ,  0.003858566 ,
    0.004049301 ,  0.004215240 ,  0.004357815 ,  0.004477024 ,
    0.004573822 ,  0.004649162 ,  0.004703045 ,  0.004737377 ,
    0.004752159 ,  0.004748821 ,  0.004728317 ,  0.004691124 ,
    0.004638195 ,  0.004570484 ,  0.004489899 ,  0.004395962 ,
    0.004290581 ,  0.004174709 ,  0.004048824 ,  0.003914356 ,
    0.003771782 ,  0.003622532 ,  0.003467083 ,  0.003306866 ,
    0.003141880 ,  0.002974033 ,  0.002803326 ,  0.002630711 ,
    0.002457142 ,  0.002283096 ,  0.002110004 ,  0.001937389 ,
    0.001766682 ,  0.001597881 ,  0.001432419 ,  0.001269817 ,
    0.001111031 ,  0.000956535 ,  0.000806808 ,  0.000661850 ,
    0.000522137 ,  0.000388145 ,  0.000259876 ,  0.000137329 ,
    0.000021458 , -0.000088215 , -0.000191689 , -0.000288486 ,
   -0.000378609 , -0.000462532 , -0.000539303 , -0.000610352 ,
   -0.000674248 , -0.000731945 , -0.000783920 , -0.000829220 ,
   -0.000868797 , -0.000902653 , -0.000930786 , -0.000953674 ,
    0.000971317 ,  0.000983715 ,  0.000991821 ,  0.000995159 ,
    0.000994205 ,  0.000989437 ,  0.000980854 ,  0.000968933 ,
    0.000954151 ,  0.000935555 ,  0.000915051 ,  0.000891685 ,
    0.000866413 ,  0.000838757 ,  0.000809669 ,  0.000779152 ,
    0.000747204 ,  0.000714302 ,  0.000680923 ,  0.000646591 ,
    0.000611782 ,  0.000576973 ,  0.000542164 ,  0.000507355 ,
    0.000472546 ,  0.000438213 ,  0.000404358 ,  0.000371456 ,
    0.000339031 ,  0.000307560 ,  0.000277042 ,  0.000247478 ,
    0.000218868 ,  0.000191212 ,  0.000165462 ,  0.000140190 ,
    0.000116348 ,  0.000093937 ,  0.000072956 ,  0.000052929 ,
    0.000034332 ,  0.000017166 ,  0.000000954 , -0.000013828 ,
   -0.000027180 , -0.000039577 , -0.000050545 , -0.000060558 ,
   -0.000069618 , -0.000077724 , -0.000084400 , -0.000090122 ,
   -0.000095367 , -0.000099182 , -0.000102520 , -0.000105381 ,
   -0.000106812 , -0.000108242 , -0.000108719 , -0.000108719 ,
   -0.000108242 , -0.000107288 , -0.000105858 , -0.000103951 ,
    0.000101566 ,  0.000099182 ,  0.000096321 ,  0.000093460 ,
    0.000090599 ,  0.000087261 ,  0.000083923 ,  0.000080585 ,
    0.000076771 ,  0.000073433 ,  0.000070095 ,  0.000066280 ,
    0.000062943 ,  0.000059605 ,  0.000055790 ,  0.000052929 ,
    0.000049591 ,  0.000046253 ,  0.000043392 ,  0.000040531 ,
    0.000037670 ,  0.000034809 ,  0.000032425 ,  0.000030041 ,
    0.000027657 ,  0.000025272 ,  0.000023365 ,  0.000021458 ,
    0.000019550 ,  0.000018120 ,  0.000016689 ,  0.000014782 ,
    0.000013828 ,  0.000012398 ,  0.000011444 ,  0.000010014 ,
    0.000009060 ,  0.000008106 ,  0.000007629 ,  0.000006676 ,
    0.000006199 ,  0.000005245 ,  0.000004768 ,  0.000004292 ,
    0.000003815 ,  0.000003338 ,  0.000003338 ,  0.000002861 ,
    0.000002384 ,  0.000002384 ,  0.000001907 ,  0.000001907 ,
    0.000001431 ,  0.000001431 ,  0.000000954 ,  0.000000954 ,
    0.000000954 ,  0.000000954 ,  0.000000477 ,  0.000000477 ,
    0.000000477 ,  0.000000477 ,  0.000000477 ,  0.000000477
];

/**
 * @description 去混叠蝶形结的系数
 * @reference Table.B.9(p65)
 * 
 * NOTE ALIASING_CS 和 ALIASING_CA 的计算方法
 * for(let i = 0; i < 8; i++) {
 *     let ci = ALIASING_REDUCTION_COEFFICIENTS[i];
 *     ALIASING_CS[i] = 1 / Math.sqrt(1 + ci * ci);
 *     ALIASING_CA[i] = ci / Math.sqrt(1 + ci * ci);
 * }
 * 
 */
const ALIASING_REDUCTION_COEFFICIENTS = [-0.6, -0.535, -0.33, -0.185, -0.095, -0.041, -0.0142, -0.0037];
const ALIASING_CS = [0.8574929257125443, 0.8817419973177052, 0.9496286491027328, 0.9833145924917902, 0.9955178160675858, 0.9991605581781475, 0.9998991952444471, 0.9999931550702803];
const ALIASING_CA = [-0.5144957554275266, -0.47173196856497235, -0.31337745420390184, -0.18191319961098118, -0.09457419252642066, -0.04096558288530405, -0.01419856857247115, -0.0036999746737600373];

/**
 * 尺度因子频带划分表
 * @reference Table.B.8(p62)
 */
const ScaleFactorBands = [
    // 32kHz
    [
        // Long Blocks
        [
            [0, 3],     [4, 7],     [8, 11],    [12, 15],   [16, 19], [20, 23],
            [24, 29],   [30, 35],   [36, 43],   [44, 53],   [54, 65],
            [66, 81],   [82, 101],  [102, 125], [126, 155], [156, 193],
            [194, 239], [240, 295], [296, 363], [364, 447], [448, 549]
        ],
        // Short Blocks
        [
            [0, 3],   [4, 7],   [8, 11],  [12, 15],  [16, 21],   [22, 29],
            [30, 41], [42, 57], [58, 77], [78, 103], [104, 137], [138, 179]
        ]
    ],
    // 44.1kHz
    [
        // Long Blocks
        [
            [0, 3],     [4, 7],     [8, 11],    [12, 15],   [16, 19], [20, 23],
            [24, 29],   [30, 35],   [36, 43],   [44, 51],   [52, 61],
            [62, 73],   [74, 89],   [90, 109],  [110, 133], [134, 161],
            [162, 195], [196, 237], [238, 287], [288, 341], [342, 417]
        ],
        // Short Blocks
        [
            [0, 3],   [4, 7],   [8, 11],  [12, 15], [16, 21],  [22, 29],
            [30, 39], [40, 51], [52, 65], [66, 83], [84, 105], [106, 135]
        ]
    ],
    // 48kHz
    [
        // Long Blocks
        [
            [0, 3],     [4, 7],     [8, 11],    [12, 15],   [16, 19], [20, 23],
            [24, 29],   [30, 35],   [36, 41],   [42, 49],   [50, 59],
            [60, 71],   [72, 87],   [88, 105],  [106, 127], [128, 155],
            [156, 189], [190, 229], [230, 275], [276, 329], [330, 383]
        ],
        // Short Blocks
        [
            [0, 3],   [4, 7],   [8, 11],  [12, 15], [16, 21], [22, 27],
            [28, 37], [38, 49], [50, 63], [64, 79], [80, 99], [100, 125]
        ]
    ]
];


/********************************************************
 * 
 *  心 理 声 学 模 型 参 数
 * 
 ********************************************************/

// 以下是标准附录C提供的参数，Layer3编码器实际使用这些参数进行PAM参数的计算。直接从dist10的源码中复制而来。

// Table C.7 [SampleRateIndex][BlockType][PartitionIndex]
const PAM_TABLES_C7 = [

    // 32000Hz
    [
        // 32000Hz, Long Blocks
        [
        //  lines  minval    qthr      norm       bval
/*  0 */  [ 2,     24.5,     4.532,    0.997,     0.313],
/*  1 */  [ 2,     24.5,     4.532,    0.893,     0.938],
/*  2 */  [ 2,     24.5,     1.809,    0.881,     1.563],
/*  3 */  [ 2,     20.0,     0.181,    0.873,     2.188],
/*  4 */  [ 2,     20.0,     0.181,    0.872,     2.813],
/*  5 */  [ 2,     20.0,     0.057,    0.871,     3.438],
/*  6 */  [ 2,     20.0,     0.018,    0.860,     4.045],
/*  7 */  [ 2,     20.0,     0.018,    0.839,     4.625],
/*  8 */  [ 2,     18.0,     0.018,    0.812,     5.173],
/*  9 */  [ 2,     18.0,     0.018,    0.784,     5.698],
/* 10 */  [ 2,     12.0,     0.018,    0.741,     6.185],
/* 11 */  [ 2,     12.0,     0.018,    0.697,     6.634],
/* 12 */  [ 2,      6.0,     0.018,    0.674,     7.070],
/* 13 */  [ 2,      6.0,     0.018,    0.651,     7.492],
/* 14 */  [ 2,      6.0,     0.018,    0.633,     7.905],
/* 15 */  [ 2,      3.0,     0.018,    0.611,     8.305],
/* 16 */  [ 2,      3.0,     0.018,    0.589,     8.695],
/* 17 */  [ 2,      3.0,     0.018,    0.575,     9.064],
/* 18 */  [ 3,      3.0,     0.027,    0.654,     9.484],
/* 19 */  [ 3,      3.0,     0.027,    0.724,     9.966],
/* 20 */  [ 3,      0.0,     0.027,    0.701,    10.426],
/* 21 */  [ 3,      0.0,     0.027,    0.673,    10.866],
/* 22 */  [ 3,      0.0,     0.027,    0.631,    11.279],
/* 23 */  [ 3,      0.0,     0.027,    0.592,    11.669],
/* 24 */  [ 3,      0.0,     0.027,    0.553,    12.042],
/* 25 */  [ 3,      0.0,     0.027,    0.510,    12.386],
/* 26 */  [ 3,      0.0,     0.027,    0.506,    12.721],
/* 27 */  [ 4,      0.0,     0.036,    0.562,    13.091],
/* 28 */  [ 4,      0.0,     0.036,    0.598,    13.488],
/* 29 */  [ 4,      0.0,     0.036,    0.589,    13.873],
/* 30 */  [ 5,      0.0,     0.045,    0.607,    14.268],
/* 31 */  [ 5,      0.0,     0.045,    0.620,    14.679],
/* 32 */  [ 5,      0.0,     0.045,    0.580,    15.067],
/* 33 */  [ 5,      0.0,     0.045,    0.532,    15.424],
/* 34 */  [ 5,      0.0,     0.045,    0.517,    15.771],
/* 35 */  [ 6,      0.0,     0.054,    0.517,    16.120],
/* 36 */  [ 6,      0.0,     0.054,    0.509,    16.466],
/* 37 */  [ 6,      0.0,     0.054,    0.506,    16.807],
/* 38 */  [ 8,      0.0,     0.072,    0.522,    17.158],
/* 39 */  [ 8,      0.0,     0.072,    0.531,    17.518],
/* 40 */  [ 8,      0.0,     0.072,    0.519,    17.869],
/* 41 */  [10,      0.0,     0.090,    0.512,    18.215],
/* 42 */  [10,      0.0,     0.090,    0.509,    18.563],
/* 43 */  [10,      0.0,     0.090,    0.498,    18.902],
/* 44 */  [12,      0.0,     0.109,    0.494,    19.239],
/* 45 */  [12,      0.0,     0.109,    0.501,    19.580],
/* 46 */  [13,      0.0,     0.118,    0.508,    19.925],
/* 47 */  [14,      0.0,     0.252,    0.502,    20.269],
/* 48 */  [14,      0.0,     0.252,    0.493,    20.606],
/* 49 */  [16,      0.0,     0.288,    0.497,    20.944],
/* 50 */  [20,      0.0,     0.572,    0.506,    21.288],
/* 51 */  [20,      0.0,     0.572,    0.510,    21.635],
/* 52 */  [23,      0.0,     0.658,    0.504,    21.980],
/* 53 */  [27,      0.0,     2.441,    0.496,    22.319],
/* 54 */  [27,      0.0,     2.441,    0.493,    22.656],
/* 55 */  [32,      0.0,     2.893,    0.490,    22.993],
/* 56 */  [37,      0.0,    33.458,    0.482,    23.326],
/* 57 */  [37,      0.0,    33.458,    0.458,    23.656],
/* 58 */  [12,      0.0,    10.851,    0.500,    23.937]
        ],

        // 32000Hz, Short Blocks
        [
        //  lines   qthr      norm     SNR         bval
/*  0 */  [ 1,      4.532,    1.000,   -8.240,     0.000],
/*  1 */  [ 1,      0.904,    0.985,   -8.240,     1.250],
/*  2 */  [ 1,      0.090,    0.983,   -8.240,     2.500],
/*  3 */  [ 1,      0.029,    0.983,   -8.240,     3.750],
/*  4 */  [ 1,      0.009,    0.981,   -8.240,     4.909],
/*  5 */  [ 1,      0.009,    0.975,   -8.240,     5.958],
/*  6 */  [ 1,      0.009,    0.959,   -8.240,     6.857],
/*  7 */  [ 1,      0.009,    0.944,   -8.240,     7.700],
/*  8 */  [ 1,      0.009,    0.933,   -8.240,     8.500],
/*  9 */  [ 1,      0.009,    0.920,   -8.240,     9.237],
/* 10 */  [ 1,      0.009,    0.892,   -7.447,     9.895],
/* 11 */  [ 1,      0.009,    0.863,   -7.447,    10.500],
/* 12 */  [ 1,      0.009,    0.839,   -7.447,    11.083],
/* 13 */  [ 1,      0.009,    0.786,   -7.447,    11.604],
/* 14 */  [ 1,      0.009,    0.755,   -7.447,    12.107],
/* 15 */  [ 1,      0.009,    0.698,   -7.447,    12.554],
/* 16 */  [ 1,      0.009,    0.673,   -7.447,    13.000],
/* 17 */  [ 1,      0.009,    0.605,   -7.447,    13.391],
/* 18 */  [ 1,      0.009,    0.629,   -7.447,    13.781],
/* 19 */  [ 2,      0.018,    0.883,   -7.447,    14.474],
/* 20 */  [ 2,      0.018,    0.858,   -6.990,    15.096],
/* 21 */  [ 2,      0.018,    0.829,   -6.990,    15.667],
/* 22 */  [ 2,      0.018,    0.767,   -6.990,    16.177],
/* 23 */  [ 2,      0.018,    0.705,   -6.990,    16.636],
/* 24 */  [ 2,      0.018,    0.637,   -6.990,    17.057],
/* 25 */  [ 2,      0.018,    0.564,   -6.990,    17.429],
/* 26 */  [ 2,      0.018,    0.550,   -6.990,    17.786],
/* 27 */  [ 3,      0.027,    0.603,   -6.990,    18.177],
/* 28 */  [ 3,      0.027,    0.635,   -6.990,    18.597],
/* 29 */  [ 3,      0.027,    0.592,   -6.990,    18.994],
/* 30 */  [ 3,      0.027,    0.533,   -6.020,    19.352],
/* 31 */  [ 3,      0.027,    0.518,   -6.020,    19.693],
/* 32 */  [ 4,      0.072,    0.568,   -6.020,    20.066],
/* 33 */  [ 4,      0.072,    0.594,   -6.020,    20.462],
/* 34 */  [ 4,      0.072,    0.568,   -5.229,    20.841],
/* 35 */  [ 5,      0.143,    0.536,   -5.229,    21.201],
/* 36 */  [ 5,      0.143,    0.522,   -5.229,    21.549],
/* 37 */  [ 6,      0.172,    0.542,   -5.229,    21.911],
/* 38 */  [ 7,      0.633,    0.539,   -4.559,    22.275],
/* 39 */  [ 7,      0.633,    0.519,   -4.559,    22.625],
/* 40 */  [ 8,      0.723,    0.514,   -3.980,    22.971],
/* 41 */  [10,      9.043,    0.518,   -3.980,    23.321]
        ]
    ],

    // 44100Hz
    [
        // 44100Hz, Long Blocks
        [
        //  lines  minval    qthr      norm       bval
/*  0 */  [ 1,     24.5,     4.532,    0.951,     0.000],
/*  1 */  [ 1,     24.5,     4.532,    0.700,     0.431],
/*  2 */  [ 1,     24.5,     4.532,    0.681,     0.861],
/*  3 */  [ 1,     24.5,     0.904,    0.675,     1.292],
/*  4 */  [ 1,     24.5,     0.904,    0.667,     1.723],
/*  5 */  [ 1,     20.0,     0.090,    0.665,     2.153],
/*  6 */  [ 1,     20.0,     0.090,    0.664,     2.584],
/*  7 */  [ 1,     20.0,     0.029,    0.664,     3.015],
/*  8 */  [ 1,     20.0,     0.029,    0.664,     3.445],
/*  9 */  [ 1,     20.0,     0.029,    0.655,     3.876],
/* 10 */  [ 1,     20.0,     0.009,    0.616,     4.279],
/* 11 */  [ 1,     20.0,     0.009,    0.597,     4.670],
/* 12 */  [ 1,     18.0,     0.009,    0.578,     5.057],
/* 13 */  [ 1,     18.0,     0.009,    0.541,     5.416],
/* 14 */  [ 1,     18.0,     0.009,    0.575,     5.774],
/* 15 */  [ 2,     12.0,     0.018,    0.856,     6.422],
/* 16 */  [ 2,      6.0,     0.018,    0.846,     7.026],
/* 17 */  [ 2,      6.0,     0.018,    0.840,     7.609],
/* 18 */  [ 2,      3.0,     0.018,    0.822,     8.168],
/* 19 */  [ 2,      3.0,     0.018,    0.800,     8.710],
/* 20 */  [ 2,      3.0,     0.018,    0.753,     9.207],
/* 21 */  [ 2,      3.0,     0.018,    0.704,     9.662],
/* 22 */  [ 2,      0.0,     0.018,    0.674,    10.099],
/* 23 */  [ 2,      0.0,     0.018,    0.640,    10.515],
/* 24 */  [ 2,      0.0,     0.018,    0.609,    10.917],
/* 25 */  [ 2,      0.0,     0.018,    0.566,    11.293],
/* 26 */  [ 2,      0.0,     0.018,    0.535,    11.652],
/* 27 */  [ 2,      0.0,     0.018,    0.531,    11.997],
/* 28 */  [ 3,      0.0,     0.027,    0.615,    12.394],
/* 29 */  [ 3,      0.0,     0.027,    0.686,    12.850],
/* 30 */  [ 3,      0.0,     0.027,    0.650,    13.277],
/* 31 */  [ 3,      0.0,     0.027,    0.612,    13.681],
/* 32 */  [ 3,      0.0,     0.027,    0.567,    14.062],
/* 33 */  [ 3,      0.0,     0.027,    0.520,    14.411],
/* 34 */  [ 3,      0.0,     0.027,    0.513,    14.751],
/* 35 */  [ 4,      0.0,     0.036,    0.557,    15.119],
/* 36 */  [ 4,      0.0,     0.036,    0.584,    15.508],
/* 37 */  [ 4,      0.0,     0.036,    0.570,    15.883],
/* 38 */  [ 5,      0.0,     0.045,    0.579,    16.263],
/* 39 */  [ 5,      0.0,     0.045,    0.585,    16.654],
/* 40 */  [ 5,      0.0,     0.045,    0.548,    17.020],
/* 41 */  [ 6,      0.0,     0.054,    0.536,    17.374],
/* 42 */  [ 6,      0.0,     0.054,    0.550,    17.744],
/* 43 */  [ 7,      0.0,     0.063,    0.532,    18.104],
/* 44 */  [ 7,      0.0,     0.063,    0.504,    18.447],
/* 45 */  [ 7,      0.0,     0.063,    0.496,    18.782],
/* 46 */  [ 9,      0.0,     0.081,    0.517,    19.130],
/* 47 */  [ 9,      0.0,     0.081,    0.527,    19.487],
/* 48 */  [ 9,      0.0,     0.081,    0.516,    19.838],
/* 49 */  [10,      0.0,     0.180,    0.497,    20.179],
/* 50 */  [10,      0.0,     0.180,    0.489,    20.510],
/* 51 */  [11,      0.0,     0.198,    0.502,    20.852],
/* 52 */  [14,      0.0,     0.400,    0.501,    21.196],
/* 53 */  [14,      0.0,     0.400,    0.491,    21.531],
/* 54 */  [15,      0.0,     0.429,    0.497,    21.870],
/* 55 */  [20,      0.0,     1.808,    0.504,    22.214],
/* 56 */  [20,      0.0,     1.808,    0.504,    22.558],
/* 57 */  [21,      0.0,     1.898,    0.495,    22.898],
/* 58 */  [27,      0.0,    24.416,    0.486,    23.232],
/* 59 */  [27,      0.0,    24.416,    0.484,    23.564],
/* 60 */  [36,      0.0,    32.554,    0.483,    23.897],
/* 61 */  [73,      0.0,   660.124,    0.475,    24.229],
/* 62 */  [18,      0.0,   162.770,    0.515,    24.442]
        ],

        // 44100Hz, Short Blocks
        [
        //  lines   qthr      norm     SNR         bval
/*  0 */  [ 1,      4.532,    1.000,   -8.240,     0.000],
/*  1 */  [ 1,      0.904,    0.983,   -8.240,     1.723],
/*  2 */  [ 1,      0.029,    0.983,   -8.240,     3.445],
/*  3 */  [ 1,      0.009,    0.982,   -8.240,     5.057],
/*  4 */  [ 1,      0.009,    0.985,   -8.240,     6.422],
/*  5 */  [ 1,      0.009,    0.983,   -8.240,     7.609],
/*  6 */  [ 1,      0.009,    0.978,   -8.240,     8.710],
/*  7 */  [ 1,      0.009,    0.967,   -8.240,     9.662],
/*  8 */  [ 1,      0.009,    0.948,   -8.240,    10.515],
/*  9 */  [ 1,      0.009,    0.930,   -8.240,    11.293],
/* 10 */  [ 1,      0.009,    0.914,   -7.447,    12.009],
/* 11 */  [ 1,      0.009,    0.870,   -7.447,    12.625],
/* 12 */  [ 1,      0.009,    0.845,   -7.447,    13.210],
/* 13 */  [ 1,      0.009,    0.800,   -7.447,    13.748],
/* 14 */  [ 1,      0.009,    0.749,   -7.447,    14.241],
/* 15 */  [ 1,      0.009,    0.701,   -7.447,    14.695],
/* 16 */  [ 1,      0.009,    0.653,   -7.447,    15.125],
/* 17 */  [ 1,      0.009,    0.590,   -7.447,    15.508],
/* 18 */  [ 1,      0.009,    0.616,   -7.447,    15.891],
/* 19 */  [ 2,      0.018,    0.860,   -7.447,    16.537],
/* 20 */  [ 2,      0.018,    0.823,   -6.990,    17.112],
/* 21 */  [ 2,      0.018,    0.762,   -6.990,    17.621],
/* 22 */  [ 2,      0.018,    0.688,   -6.990,    18.073],
/* 23 */  [ 2,      0.018,    0.612,   -6.990,    18.470],
/* 24 */  [ 2,      0.018,    0.594,   -6.990,    18.849],
/* 25 */  [ 3,      0.027,    0.658,   -6.990,    19.271],
/* 26 */  [ 3,      0.027,    0.706,   -6.990,    19.741],
/* 27 */  [ 3,      0.054,    0.660,   -6.990,    20.177],
/* 28 */  [ 3,      0.054,    0.606,   -6.990,    20.576],
/* 29 */  [ 3,      0.054,    0.565,   -6.990,    20.950],
/* 30 */  [ 4,      0.114,    0.560,   -6.020,    21.316],
/* 31 */  [ 4,      0.114,    0.579,   -6.020,    21.699],
/* 32 */  [ 5,      0.452,    0.567,   -6.020,    22.078],
/* 33 */  [ 5,      0.452,    0.534,   -6.020,    22.438],
/* 34 */  [ 5,      0.452,    0.514,   -5.229,    22.782],
/* 35 */  [ 7,      6.330,    0.520,   -5.229,    23.133],
/* 36 */  [ 7,      6.330,    0.518,   -5.229,    23.484],
/* 37 */  [ 7,      6.330,    0.507,   -5.229,    23.828],
/* 38 */  [19,    171.813,    0.447,   -4.559,    24.173]
        ]
    ],

    // 48000Hz
    [
        // 48000Hz, Long Blocks
        [
        //  lines  minval    qthr      norm       bval
/*  0 */  [ 1,     24.5,     4.532,    0.970,     0.000],
/*  1 */  [ 1,     24.5,     4.532,    0.755,     0.469],
/*  2 */  [ 1,     24.5,     4.532,    0.738,     0.938],
/*  3 */  [ 1,     24.5,     0.904,    0.730,     1.406],
/*  4 */  [ 1,     24.5,     0.904,    0.724,     1.875],
/*  5 */  [ 1,     20.0,     0.090,    0.723,     2.344],
/*  6 */  [ 1,     20.0,     0.090,    0.723,     2.813],
/*  7 */  [ 1,     20.0,     0.029,    0.723,     3.281],
/*  8 */  [ 1,     20.0,     0.029,    0.718,     3.750],
/*  9 */  [ 1,     20.0,     0.009,    0.690,     4.199],
/* 10 */  [ 1,     20.0,     0.009,    0.660,     4.625],
/* 11 */  [ 1,     18.0,     0.009,    0.641,     5.047],
/* 12 */  [ 1,     18.0,     0.009,    0.600,     5.438],
/* 13 */  [ 1,     18.0,     0.009,    0.584,     5.828],
/* 14 */  [ 1,     12.0,     0.009,    0.532,     6.188],
/* 15 */  [ 1,     12.0,     0.009,    0.537,     6.522],
/* 16 */  [ 2,      6.0,     0.018,    0.857,     7.174],
/* 17 */  [ 2,      6.0,     0.018,    0.858,     7.801],
/* 18 */  [ 2,      3.0,     0.018,    0.853,     8.402],
/* 19 */  [ 2,      3.0,     0.018,    0.824,     8.966],
/* 20 */  [ 2,      3.0,     0.018,    0.778,     9.484],
/* 21 */  [ 2,      3.0,     0.018,    0.740,     9.966],
/* 22 */  [ 2,      0.0,     0.018,    0.709,    10.426],
/* 23 */  [ 2,      0.0,     0.018,    0.676,    10.866],
/* 24 */  [ 2,      0.0,     0.018,    0.632,    11.279],
/* 25 */  [ 2,      0.0,     0.018,    0.592,    11.669],
/* 26 */  [ 2,      0.0,     0.018,    0.553,    12.042],
/* 27 */  [ 2,      0.0,     0.018,    0.510,    12.386],
/* 28 */  [ 2,      0.0,     0.018,    0.513,    12.721],
/* 29 */  [ 3,      0.0,     0.027,    0.608,    13.115],
/* 30 */  [ 3,      0.0,     0.027,    0.673,    13.562],
/* 31 */  [ 3,      0.0,     0.027,    0.637,    13.984],
/* 32 */  [ 3,      0.0,     0.027,    0.586,    14.371],
/* 33 */  [ 3,      0.0,     0.027,    0.571,    14.741],
/* 34 */  [ 4,      0.0,     0.036,    0.616,    15.140],
/* 35 */  [ 4,      0.0,     0.036,    0.640,    15.563],
/* 36 */  [ 4,      0.0,     0.036,    0.598,    15.962],
/* 37 */  [ 4,      0.0,     0.036,    0.538,    16.324],
/* 38 */  [ 4,      0.0,     0.036,    0.512,    16.665],
/* 39 */  [ 5,      0.0,     0.045,    0.528,    17.020],
/* 40 */  [ 5,      0.0,     0.045,    0.517,    17.373],
/* 41 */  [ 5,      0.0,     0.045,    0.493,    17.708],
/* 42 */  [ 6,      0.0,     0.054,    0.499,    18.045],
/* 43 */  [ 7,      0.0,     0.063,    0.525,    18.398],
/* 44 */  [ 7,      0.0,     0.063,    0.541,    18.762],
/* 45 */  [ 8,      0.0,     0.072,    0.528,    19.120],
/* 46 */  [ 8,      0.0,     0.072,    0.510,    19.466],
/* 47 */  [ 8,      0.0,     0.072,    0.506,    19.807],
/* 48 */  [10,      0.0,     0.180,    0.525,    20.159],
/* 49 */  [10,      0.0,     0.180,    0.536,    20.522],
/* 50 */  [10,      0.0,     0.180,    0.518,    20.874],
/* 51 */  [13,      0.0,     0.372,    0.501,    21.214],
/* 52 */  [13,      0.0,     0.372,    0.497,    21.553],
/* 53 */  [14,      0.0,     0.400,    0.497,    21.892],
/* 54 */  [18,      0.0,     1.627,    0.495,    22.231],
/* 55 */  [18,      0.0,     1.627,    0.494,    22.569],
/* 56 */  [20,      0.0,     1.808,    0.497,    22.909],
/* 57 */  [25,      0.0,    22.607,    0.494,    23.248],
/* 58 */  [25,      0.0,    22.607,    0.487,    23.583],
/* 59 */  [35,      0.0,    31.650,    0.483,    23.915],
/* 60 */  [67,      0.0,   605.867,    0.482,    24.246],
/* 61 */  [67,      0.0,   605.867,    0.524,    24.576]
        ],

        // 48000Hz, Short Blocks
        [
        //  lines   qthr      norm     SNR         bval
/*  0 */  [ 1,      4.532,    1.000,   -8.240,     0.000],
/*  1 */  [ 1,      0.904,    0.989,   -8.240,     1.875],
/*  2 */  [ 1,      0.029,    0.989,   -8.240,     3.750],
/*  3 */  [ 1,      0.009,    0.981,   -8.240,     5.438],
/*  4 */  [ 1,      0.009,    0.985,   -8.240,     6.857],
/*  5 */  [ 1,      0.009,    0.984,   -8.240,     8.109],
/*  6 */  [ 1,      0.009,    0.980,   -8.240,     9.237],
/*  7 */  [ 1,      0.009,    0.968,   -8.240,    10.202],
/*  8 */  [ 1,      0.009,    0.954,   -8.240,    11.083],
/*  9 */  [ 1,      0.009,    0.929,   -8.240,    11.865],
/* 10 */  [ 1,      0.009,    0.906,   -7.447,    12.554],
/* 11 */  [ 1,      0.009,    0.883,   -7.447,    13.195],
/* 12 */  [ 1,      0.009,    0.844,   -7.447,    13.781],
/* 13 */  [ 1,      0.009,    0.792,   -7.447,    14.309],
/* 14 */  [ 1,      0.009,    0.747,   -7.447,    14.803],
/* 15 */  [ 1,      0.009,    0.689,   -7.447,    15.250],
/* 16 */  [ 1,      0.009,    0.644,   -7.447,    15.667],
/* 17 */  [ 1,      0.009,    0.592,   -7.447,    16.068],
/* 18 */  [ 1,      0.009,    0.553,   -7.447,    16.409],
/* 19 */  [ 2,      0.018,    0.850,   -7.447,    17.045],
/* 20 */  [ 2,      0.018,    0.811,   -6.990,    17.607],
/* 21 */  [ 2,      0.018,    0.736,   -6.990,    18.097],
/* 22 */  [ 2,      0.018,    0.665,   -6.990,    18.528],
/* 23 */  [ 2,      0.018,    0.610,   -6.990,    18.931],
/* 24 */  [ 2,      0.018,    0.544,   -6.990,    19.295],
/* 25 */  [ 2,      0.018,    0.528,   -6.990,    19.636],
/* 26 */  [ 3,      0.054,    0.621,   -6.990,    20.038],
/* 27 */  [ 3,      0.054,    0.673,   -6.990,    20.486],
/* 28 */  [ 3,      0.054,    0.635,   -6.990,    20.900],
/* 29 */  [ 4,      0.114,    0.626,   -6.990,    21.306],
/* 30 */  [ 4,      0.114,    0.636,   -6.020,    21.722],
/* 31 */  [ 5,      0.452,    0.615,   -6.020,    22.128],
/* 32 */  [ 5,      0.452,    0.579,   -6.020,    22.513],
/* 33 */  [ 5,      0.452,    0.551,   -6.020,    22.877],
/* 34 */  [ 7,      6.330,    0.552,   -5.229,    23.241],
/* 35 */  [ 7,      6.330,    0.559,   -5.229,    23.616],
/* 36 */  [11,      9.947,    0.528,   -5.229,    23.974],
/* 37 */  [17,    153.727,    0.479,   -5.229,    24.313]
        ]
    ]
];


// Table C.8 [SampleRateIndex][BlockType][ScalefactorBandIndex]
const PAM_TABLES_C8 = [

    // 32000Hz
    [
        // 32000Hz, Long Blocks
        [
// sb      cbw  bu   bo     w1       w2
/*  0 */  [1,    0,   2,    1.000,   0.528],
/*  1 */  [2,    2,   4,    0.472,   0.305],
/*  2 */  [2,    4,   6,    0.694,   0.083],
/*  3 */  [1,    6,   7,    0.917,   0.861],
/*  4 */  [2,    7,   9,    0.139,   0.639],
/*  5 */  [2,    9,  11,    0.361,   0.417],
/*  6 */  [3,   11,  14,    0.583,   0.083],
/*  7 */  [2,   14,  16,    0.917,   0.750],
/*  8 */  [3,   16,  19,    0.250,   0.870],
/*  9 */  [3,   19,  22,    0.130,   0.833],
/* 10 */  [4,   22,  26,    0.167,   0.389],
/* 11 */  [4,   26,  30,    0.611,   0.478],
/* 12 */  [4,   30,  34,    0.522,   0.033],
/* 13 */  [3,   34,  37,    0.967,   0.917],
/* 14 */  [4,   37,  41,    0.083,   0.617],
/* 15 */  [3,   41,  44,    0.383,   0.995],
/* 16 */  [4,   44,  48,    0.005,   0.274],
/* 17 */  [3,   48,  51,    0.726,   0.480],
/* 18 */  [3,   51,  54,    0.519,   0.261],
/* 19 */  [2,   54,  56,    0.739,   0.884],
/* 20 */  [2,   56,  58,    0.116,   1.000]
        ],

        // 32000Hz, Short Blocks
        [
// sb      cbw  bu   bo     w1       w2
/*  0 */  [2,    0,   2,    1.000,   0.167],
/*  1 */  [2,    3,   5,    0.833,   0.833],
/*  2 */  [3,    5,   8,    0.167,   0.500],
/*  3 */  [3,    8,  11,    0.500,   0.167],
/*  4 */  [4,   11,  15,    0.833,   0.167],
/*  5 */  [5,   15,  20,    0.833,   0.250],
/*  6 */  [4,   20,  24,    0.750,   0.250],
/*  7 */  [5,   24,  29,    0.750,   0.055],
/*  8 */  [4,   29,  33,    0.944,   0.375],
/*  9 */  [4,   33,  37,    0.625,   0.472],
/* 10 */  [3,   37,  40,    0.528,   0.937],
/* 11 */  [1,   40,  41,    0.062,   1.000]
        ]
    ],

    // 44100Hz
    [
        // 44100Hz, Long Blocks
        [
// sb      cbw  bu   bo     w1       w2
/*  0 */  [3,    0,   4,    1.000,   0.056],
/*  1 */  [3,    4,   7,    0.944,   0.611],
/*  2 */  [4,    7,  11,    0.389,   0.167],
/*  3 */  [3,   11,  14,    0.833,   0.722],
/*  4 */  [3,   14,  17,    0.278,   0.139],
/*  5 */  [1,   17,  18,    0.861,   0.917],
/*  6 */  [3,   18,  21,    0.083,   0.583],
/*  7 */  [3,   21,  24,    0.417,   0.250],
/*  8 */  [3,   24,  27,    0.750,   0.805],
/*  9 */  [3,   27,  30,    0.194,   0.574],
/* 10 */  [3,   30,  33,    0.426,   0.537],
/* 11 */  [3,   33,  36,    0.463,   0.819],
/* 12 */  [4,   36,  40,    0.180,   0.100],
/* 13 */  [3,   40,  43,    0.900,   0.468],
/* 14 */  [3,   43,  46,    0.532,   0.623],
/* 15 */  [3,   46,  49,    0.376,   0.450],
/* 16 */  [3,   49,  52,    0.550,   0.552],
/* 17 */  [3,   52,  55,    0.448,   0.403],
/* 18 */  [2,   55,  57,    0.597,   0.643],
/* 19 */  [2,   57,  59,    0.357,   0.722],
/* 20 */  [2,   59,  61,    0.278,   0.960]
        ],

        // 44100Hz, Short Blocks
        [
// sb      cbw  bu   bo     w1       w2
/*  0 */  [2,    0,   2,    1.000,   0.167],
/*  1 */  [2,    3,   5,    0.833,   0.833],
/*  2 */  [3,    5,   8,    0.167,   0.500],
/*  3 */  [3,    8,  11,    0.500,   0.167],
/*  4 */  [4,   11,  15,    0.833,   0.167],
/*  5 */  [5,   15,  20,    0.833,   0.250],
/*  6 */  [3,   20,  23,    0.750,   0.583],
/*  7 */  [4,   23,  27,    0.417,   0.055],
/*  8 */  [3,   27,  30,    0.944,   0.375],
/*  9 */  [3,   30,  33,    0.625,   0.300],
/* 10 */  [3,   33,  36,    0.700,   0.167],
/* 11 */  [2,   36,  38,    0.833,   1.000]
        ]
    ],

    // 48000Hz
    [
        // 48000Hz, Long Blocks
        [
// sb      cbw  bu   bo     w1       w2
/*  0 */  [3,    0,    4,   1.000,   0.056],
/*  1 */  [3,    4,    7,   0.944,   0.611],
/*  2 */  [4,    7,   11,   0.389,   0.167],
/*  3 */  [3,   11,   14,   0.833,   0.722],
/*  4 */  [3,   14,   17,   0.278,   0.639],
/*  5 */  [2,   17,   19,   0.361,   0.417],
/*  6 */  [3,   19,   22,   0.583,   0.083],
/*  7 */  [2,   22,   24,   0.917,   0.750],
/*  8 */  [3,   24,   27,   0.250,   0.417],
/*  9 */  [3,   27,   30,   0.583,   0.648],
/* 10 */  [3,   30,   33,   0.352,   0.611],
/* 11 */  [3,   33,   36,   0.389,   0.625],
/* 12 */  [4,   36,   40,   0.375,   0.144],
/* 13 */  [3,   40,   43,   0.856,   0.389],
/* 14 */  [3,   43,   46,   0.611,   0.160],
/* 15 */  [3,   46,   49,   0.840,   0.217],
/* 16 */  [3,   49,   52,   0.783,   0.184],
/* 17 */  [2,   52,   54,   0.816,   0.886],
/* 18 */  [3,   54,   57,   0.114,   0.313],
/* 19 */  [2,   57,   59,   0.687,   0.452],
/* 20 */  [1,   59,   60,   0.548,   0.908]
        ],

        // 48000Hz, Short Blocks
        [
// sb      cbw  bu   bo     w1       w2
/*  0 */  [2,    0,   2,    1.000,   0.167],
/*  1 */  [2,    3,   5,    0.833,   0.833],
/*  2 */  [3,    5,   8,    0.167,   0.500],
/*  3 */  [3,    8,  11,    0.500,   0.167],
/*  4 */  [4,   11,  15,    0.833,   0.167],
/*  5 */  [4,   15,  19,    0.833,   0.583],
/*  6 */  [3,   19,  22,    0.417,   0.917],
/*  7 */  [4,   22,  26,    0.083,   0.944],
/*  8 */  [4,   26,  30,    0.055,   0.042],
/*  9 */  [2,   30,  32,    0.958,   0.567],
/* 10 */  [3,   32,  35,    0.433,   0.167],
/* 11 */  [2,   35,  37,    0.833,   0.618]
        ]
    ]
];






// 以下是标准附录D提供的（部分）参数，在Layer3编码器中并未使用。

// Table D.3
const THRESHOLD_CALCULATION_PARTITIONS = [
    // 32kHz
    [
                //   wlow,   whigh,  bval,     minval,   TMN
                    [0,      0,      0,        0,        0   ],
        /* 1  */    [1,      1,      0.00,     0.0,      24.5],
        /* 2  */    [2,      4,      0.63,     0.0,      24.5],
        /* 3  */    [5,      7,      1.56,     20.0,     24.5],
        /* 4  */    [8,      10,     2.50,     20.0,     24.5],
        /* 5  */    [11,     13,     3.44,     20.0,     24.5],
        /* 6  */    [14,     16,     4.34,     20.0,     24.5],
        /* 7  */    [17,     19,     5.17,     20.0,     24.5],
        /* 8  */    [20,     22,     5.94,     20.0,     24.5],
        /* 9  */    [23,     25,     6.63,     17.0,     24.5],
        /* 10 */    [26,     28,     7.28,     15.0,     24.5],
        /* 11 */    [29,     31,     7.90,     15.0,     24.5],
        /* 12 */    [32,     34,     8.50,     10.0,     24.5],
        /* 13 */    [35,     37,     9.06,     7.0,      24.5],
        /* 14 */    [38,     41,     9.65,     7.0,      24.5],
        /* 15 */    [42,     45,     10.28,    4.4,      24.8],
        /* 16 */    [46,     49,     10.87,    4.4,      25.4],
        /* 17 */    [50,     53,     11.41,    4.5,      25.9],
        /* 18 */    [54,     57,     11.92,    4.5,      26.4],
        /* 19 */    [58,     61,     12.39,    4.5,      26.9],
        /* 20 */    [62,     65,     12.83,    4.5,      27.3],
        /* 21 */    [66,     70,     13.29,    4.5,      27.8],
        /* 22 */    [71,     75,     13.78,    4.5,      28.3],
        /* 23 */    [76,     81,     14.27,    4.5,      28.8],
        /* 24 */    [82,     87,     14.76,    4.5,      29.3],
        /* 25 */    [88,     93,     15.22,    4.5,      29.7],
        /* 26 */    [94,     99,     15.63,    4.5,      30.1],
        /* 27 */    [100,    106,    16.06,    4.5,      30.6],
        /* 28 */    [107,    113,    16.47,    4.5,      31.0],
        /* 29 */    [114,    120,    16.86,    4.5,      31.4],
        /* 30 */    [121,    129,    17.25,    4.5,      31.8],
        /* 31 */    [130,    138,    17.65,    4.5,      32.2],
        /* 32 */    [139,    148,    18.05,    4.5,      32.5],
        /* 33 */    [149,    159,    18.42,    4.5,      32.9],
        /* 34 */    [160,    170,    18.81,    4.5,      33.3],
        /* 35 */    [171,    183,    19.18,    4.5,      33.7],
        /* 36 */    [184,    196,    19.55,    4.5,      34.1],
        /* 37 */    [197,    210,    19.93,    4.5,      34.4],
        /* 38 */    [211,    225,    20.29,    4.5,      34.8],
        /* 39 */    [226,    240,    20.65,    4.5,      35.2],
        /* 40 */    [241,    258,    21.02,    4.5,      35.5],
        /* 41 */    [259,    279,    21.38,    4.5,      35.9],
        /* 42 */    [280,    300,    21.74,    4.5,      36.2],
        /* 43 */    [301,    326,    22.10,    4.5,      36.6],
        /* 44 */    [327,    354,    22.44,    4.5,      36.9],
        /* 45 */    [355,    382,    22.79,    4.5,      37.3],
        /* 46 */    [383,    420,    23.14,    4.5,      37.6],
        /* 47 */    [421,    458,    23.49,    4.5,      38.0],
        /* 48 */    [459,    496,    23.83,    4.5,      38.3],
        /* 49 */    [497,    513,    24.07,    4.5,      38.6]
    ],

    // 44.1kHz
    [
                //   wlow,   whigh,  bval,     minval,   TMN
                    [0,      0,      0,        0,        0   ],
        /* 1  */    [1,      1,      0.00,     0.0,      24.5],
        /* 2  */    [2,      2,      0.43,     0.0,      24.5],
        /* 3  */    [3,      3,      0.86,     0.0,      24.5],
        /* 4  */    [4,      4,      1.29,     20.0,     24.5],
        /* 5  */    [5,      5,      1.72,     20.0,     24.5],
        /* 6  */    [6,      6,      2.15,     20.0,     24.5],
        /* 7  */    [7,      7,      2.58,     20.0,     24.5],
        /* 8  */    [8,      8,      3.01,     20.0,     24.5],
        /* 9  */    [9,      9,      3.45,     20.0,     24.5],
        /* 10 */    [10,     10,     3.88,     20.0,     24.5],
        /* 11 */    [11,     11,     4.28,     20.0,     24.5],
        /* 12 */    [12,     12,     4.67,     20.0,     24.5],
        /* 13 */    [13,     13,     5.06,     20.0,     24.5],
        /* 14 */    [14,     14,     5.42,     20.0,     24.5],
        /* 15 */    [15,     15,     5.77,     20.0,     24.5],
        /* 16 */    [16,     16,     6.11,     17.0,     24.5],
        /* 17 */    [17,     19,     6.73,     17.0,     24.5],
        /* 18 */    [20,     22,     7.61,     15.0,     24.5],
        /* 19 */    [23,     25,     8.44,     10.0,     24.5],
        /* 20 */    [26,     28,     9.21,     7.0,      24.5],
        /* 21 */    [29,     31,     9.88,     7.0,      24.5],
        /* 22 */    [32,     34,     10.51,    4.4,      25.0],
        /* 23 */    [35,     37,     11.11,    4.5,      25.6],
        /* 24 */    [38,     40,     11.65,    4.5,      26.2],
        /* 25 */    [41,     44,     12.24,    4.5,      26.7],
        /* 26 */    [45,     48,     12.85,    4.5,      27.4],
        /* 27 */    [49,     52,     13.41,    4.5,      27.9],
        /* 28 */    [53,     56,     13.94,    4.5,      28.4],
        /* 29 */    [57,     60,     14.42,    4.5,      28.9],
        /* 30 */    [61,     64,     14.86,    4.5,      29.4],
        /* 31 */    [65,     69,     15.32,    4.5,      29.8],
        /* 32 */    [70,     74,     15.79,    4.5,      30.3],
        /* 33 */    [75,     80,     16.26,    4.5,      30.8],
        /* 34 */    [81,     86,     16.73,    4.5,      31.2],
        /* 35 */    [87,     93,     17.19,    4.5,      31.7],
        /* 36 */    [94,     100,    17.62,    4.5,      32.1],
        /* 37 */    [101,    108,    18.05,    4.5,      32.5],
        /* 38 */    [109,    116,    18.45,    4.5,      32.9],
        /* 39 */    [117,    124,    18.83,    4.5,      33.3],
        /* 40 */    [125,    134,    19.21,    4.5,      33.7],
        /* 41 */    [135,    144,    19.60,    4.5,      34.1],
        /* 42 */    [145,    155,    20.00,    4.5,      34.5],
        /* 43 */    [156,    166,    20.38,    4.5,      34.9],
        /* 44 */    [167,    177,    20.74,    4.5,      35.2],
        /* 45 */    [178,    192,    21.12,    4.5,      35.6],
        /* 46 */    [193,    207,    21.48,    4.5,      36.0],
        /* 47 */    [208,    222,    21.84,    4.5,      36.3],
        /* 48 */    [223,    243,    22.20,    4.5,      36.7],
        /* 49 */    [244,    264,    22.56,    4.5,      37.1],
        /* 50 */    [265,    286,    22.91,    4.5,      37.4],
        /* 51 */    [287,    314,    23.26,    4.5,      37.8],
        /* 52 */    [315,    342,    23.60,    4.5,      38.1],
        /* 53 */    [343,    371,    23.95,    4.5,      38.4],
        /* 54 */    [372,    401,    24.30,    4.5,      38.8],
        /* 55 */    [402,    431,    24.65,    4.5,      39.1],
        /* 56 */    [432,    469,    25.00,    4.5,      39.5],
        /* 57 */    [470,    513,    25.33,    3.5,      39.8]
    ],

    // 48kHz
    [
                //   wlow,   whigh,  bval,     minval,   TMN
                    [0,      0,      0,        0,        0   ],
        /* 1  */    [1,      1,      0.00,     0.0,      24.5],
        /* 2  */    [2,      2,      0.47,     0.0,      24.5],
        /* 3  */    [3,      3,      0.94,     0.0,      24.5],
        /* 4  */    [4,      4,      1.41,     20.0,     24.5],
        /* 5  */    [5,      5,      1.88,     20.0,     24.5],
        /* 6  */    [6,      6,      2.34,     20.0,     24.5],
        /* 7  */    [7,      7,      2.81,     20.0,     24.5],
        /* 8  */    [8,      8,      3.28,     20.0,     24.5],
        /* 9  */    [9,      9,      3.75,     20.0,     24.5],
        /* 10 */    [10,     10,     4.20,     20.0,     24.5],
        /* 11 */    [11,     11,     4.63,     20.0,     24.5],
        /* 12 */    [12,     12,     5.05,     20.0,     24.5],
        /* 13 */    [13,     13,     5.44,     20.0,     24.5],
        /* 14 */    [14,     14,     5.83,     20.0,     24.5],
        /* 15 */    [15,     15,     6.19,     20.0,     24.5],
        /* 16 */    [16,     16,     6.52,     17.0,     24.5],
        /* 17 */    [17,     17,     6.86,     17.0,     24.5],
        /* 18 */    [18,     20,     7.49,     15.0,     24.5],
        /* 19 */    [21,     23,     8.40,     10.0,     24.5],
        /* 20 */    [24,     26,     9.24,     7.0,      24.5],
        /* 21 */    [27,     29,     9.97,     7.0,      24.5],
        /* 22 */    [30,     32,     10.65,    4.4,      25.1],
        /* 23 */    [33,     35,     11.28,    4.5,      25.8],
        /* 24 */    [36,     38,     11.86,    4.5,      26.4],
        /* 25 */    [39,     41,     12.39,    4.5,      26.9],
        /* 26 */    [42,     45,     12.96,    4.5,      27.5],
        /* 27 */    [46,     49,     13.56,    4.5,      28.1],
        /* 28 */    [50,     53,     14.12,    4.5,      28.6],
        /* 29 */    [54,     57,     14.62,    4.5,      29.1],
        /* 30 */    [58,     62,     15.14,    4.5,      29.6],
        /* 31 */    [63,     67,     15.67,    4.5,      30.2],
        /* 32 */    [68,     72,     16.15,    4.5,      30.7],
        /* 33 */    [73,     77,     16.58,    4.5,      31.1],
        /* 34 */    [78,     83,     17.02,    4.5,      31.5],
        /* 35 */    [84,     89,     17.44,    4.5,      31.9],
        /* 36 */    [90,     95,     17.84,    4.5,      32.3],
        /* 37 */    [96,     103,    18.24,    4.5,      32.7],
        /* 38 */    [104,    111,    18.66,    4.5,      33.2],
        /* 39 */    [112,    120,    19.07,    4.5,      33.6],
        /* 40 */    [121,    129,    19.47,    4.5,      34.0],
        /* 41 */    [130,    138,    19.85,    4.5,      34.3],
        /* 42 */    [139,    149,    20.23,    4.5,      34.7],
        /* 43 */    [150,    160,    20.63,    4.5,      35.1],
        /* 44 */    [161,    173,    21.02,    4.5,      35.5],
        /* 45 */    [174,    187,    21.40,    4.5,      35.9],
        /* 46 */    [188,    201,    21.76,    4.5,      36.3],
        /* 47 */    [202,    219,    22.12,    4.5,      36.6],
        /* 48 */    [220,    238,    22.47,    4.5,      37.0],
        /* 49 */    [239,    257,    22.83,    4.5,      37.3],
        /* 50 */    [258,    283,    23.18,    4.5,      37.7],
        /* 51 */    [284,    309,    23.53,    4.5,      38.0],
        /* 52 */    [310,    335,    23.88,    4.5,      38.4],
        /* 53 */    [336,    363,    24.23,    4.5,      38.7],
        /* 54 */    [364,    391,    24.58,    4.5,      39.1],
        /* 55 */    [392,    423,    24.93,    4.5,      39.4],
        /* 56 */    [424,    465,    25.27,    4.5,      39.8],
        /* 57 */    [466,    507,    25.61,    3.5,      40.1],
        /* 58 */    [508,    513,    25.81,    3.5,      40.3]
    ]
];