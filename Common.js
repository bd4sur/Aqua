
/////////////////////////////////////////////////////////////////
//
//  编 码 器 全 局 参 数 （需要放在模块依赖链条的最前面）
//
//     说明：这些参数耦合在现有代码各处，有待优化。
//
/////////////////////////////////////////////////////////////////

// 采样率（枚举值）
const SAMPLE_RATE_32000 = 0;
const SAMPLE_RATE_44100 = 1;
const SAMPLE_RATE_48000 = 2;

let SAMPLE_RATE = SAMPLE_RATE_44100;

// 比特率（枚举值）
const BIT_RATE_64K  = 0;
const BIT_RATE_128K = 1;
const BIT_RATE_224K = 2;
const BIT_RATE_320K = 3;

let BIT_RATE = BIT_RATE_320K;

// 声道数（最大设为2）
let CHANNELS = 2;

/////////////////////////////////////////////////////////////////
//
//  工 具 函 数
//
/////////////////////////////////////////////////////////////////

function LOG(x) {
    // console.log(x);
    // if(typeof x === "object") {
    //     x = JSON.stringify(x);
    // }
    // let html = $("#output").html();
    // $("#output").html(html + x + `<br>`);
}


// 返回某正整数的指定长度的二进制串
function BinaryString(intNumber, length) {
    let seq = "";
    let shift = Math.ceil(length / 4);
    let remain = 4 - length % 4;
    for(let i = 0; i < shift; i++) {
        let rightBits = (intNumber & 15);
        switch(rightBits) {
            case 0:  seq = "0000" + seq; break;
            case 1:  seq = "0001" + seq; break;
            case 2:  seq = "0010" + seq; break;
            case 3:  seq = "0011" + seq; break;
            case 4:  seq = "0100" + seq; break;
            case 5:  seq = "0101" + seq; break;
            case 6:  seq = "0110" + seq; break;
            case 7:  seq = "0111" + seq; break;
            case 8:  seq = "1000" + seq; break;
            case 9:  seq = "1001" + seq; break;
            case 10: seq = "1010" + seq; break;
            case 11: seq = "1011" + seq; break;
            case 12: seq = "1100" + seq; break;
            case 13: seq = "1101" + seq; break;
            case 14: seq = "1110" + seq; break;
            case 15: seq = "1111" + seq; break;
            default: break;
        }
        intNumber = intNumber >> 4;
    }

    if(remain === 4) {
        return seq;
    }
    else {
        return seq.substring(remain);
    }
}

// 二进制串转无符号整数
function BinaryStringToUint(bstr) {
    let sum = 0;
    for(let i = bstr.length; i>= 0; i--) {
        if(bstr[i] === "1") {
            sum += (1 << (bstr.length - i - 1));
        }
    }
    return sum;
}


/////////////////////////////////////////////////////////////////
//
//  常 数 表 格 及 其 初 始 化
//
/////////////////////////////////////////////////////////////////

const BIT_RATE_VALUE   = [64000, 128000, 224000, 320000];
const BIT_RATE_BINCODE = ["0101", "1001", "1100", "1110"];

const SAMPLE_RATE_VALUE   = [32000, 44100, 48000];
const SAMPLE_RATE_BINCODE = ["10", "00", "01"];

// 用于表格索引
const LONG_BLOCK  = 0;
const SHORT_BLOCK = 1;

const WINDOW_NORMAL = 0;
const WINDOW_START  = 1;
const WINDOW_SHORT  = 2;
const WINDOW_STOP   = 3;

// MDCT系数表

let MDCT_FACTOR_36 = new Array();
let MDCT_FACTOR_12 = new Array();

for(i = 0; i < 18; i++) {
    for(let k = 0; k < 36; k++) {
        MDCT_FACTOR_36[i * 36 + k] = Math.cos(Math.PI * (2 * k + 1 + 18) * (2 * i + 1) / (2 * 36));
    }
}

for(i = 0; i < 6; i++) {
    for(let k = 0; k < 12; k++) {
        MDCT_FACTOR_12[i * 12 + k] = Math.cos(Math.PI * (2 * k + 1 + 6) * (2 * i + 1) / (2 * 12));
    }
}


// 哈夫曼编码表（字典实现，容易编辑）

const HuffmanTableQuadruple = [
    // Table A
    ["1", "0101", "0100", "00101", "0110", "000101", "00100", "000100", "0111", "00011", "00110", "000000", "00111", "000010", "000011", "000001"],
    // Table B
    ["1111", "1110", "1101", "1100", "1011", "1010", "1001", "1000", "0111", "0110", "0101", "0100", "0011", "0010", "0001", "0000"]
];

// 与16~23共享
const HuffmanTable16 = {
    "0 0": "1","0 1": "0101","0 2": "001110","0 3": "00101100","0 4": "001001010","0 5": "000111111","0 6": "0001101110","0 7": "0001011101",
    "0 8": "00010101100","0 9": "00010010101","0 10": "00010001010","0 11": "000011110010","0 12": "000011100001","0 13": "000011000011","0 14": "0000101111000","0 15": "000010001",
    "1 0": "011","1 1": "0100","1 2": "001100","1 3": "0010100","1 4": "00100011","1 5": "000111110","1 6": "000110101","1 7": "000101111",
    "1 8": "0001010011","1 9": "0001001011","1 10": "0001000100","1 11": "00001110111","1 12": "000011001001","1 13": "00001101011","1 14": "000011001111","1 15": "00001001",
    "2 0": "001111","2 1": "001101","2 2": "0010111","2 3": "00100110","2 4": "001000011","2 5": "000111010","2 6": "0001100111","2 7": "0001011010",
    "2 8": "00010100001","2 9": "0001001000","2 10": "00001111111","2 11": "00001110101","2 12": "00001101110","2 13": "000011010001","2 14": "000011001110","2 15": "000010000",
    "3 0": "00101101","3 1": "0010101","3 2": "00100111","3 3": "001000101","3 4": "001000000","3 5": "0001110010","3 6": "0001100011","3 7": "0001010111",
    "3 8": "00010011110","3 9": "00010001100","3 10": "000011111100","3 11": "000011010100","3 12": "000011000111","3 13": "0000110000011","3 14": "0000101101101","3 15": "0000011010",
    "4 0": "001001011","4 1": "00100100","4 2": "001000100","4 3": "001000001","4 4": "0001110011","4 5": "0001100101","4 6": "00010110011","4 7": "00010100100",
    "4 8": "00010011011","4 9": "000100001000","4 10": "000011110110","4 11": "000011100010","4 12": "0000110001011","4 13": "0000101111110","4 14": "0000101101010","4 15": "000001001",
    "5 0": "001000010","5 1": "00011110","5 2": "000111011","5 3": "000111000","5 4": "0001100110","5 5": "00010111001","5 6": "00010101101","5 7": "000100001001",
    "5 8": "00010001110","5 9": "000011111101","5 10": "000011101000","5 11": "0000110010000","5 12": "0000110000100","5 13": "0000101111010","5 14": "00000110111101","5 15": "0000010000",
    "6 0": "0001101111","6 1": "000110110","6 2": "000110100","6 3": "0001100100","6 4": "00010111000","6 5": "00010110010","6 6": "00010100000","6 7": "00010000101",
    "6 8": "000100000001","6 9": "000011110100","6 10": "000011100100","6 11": "000011011001","6 12": "0000110000001","6 13": "0000101101110","6 14": "00001011001011","6 15": "0000001010",
    "7 0": "0001100010","7 1": "000110000","7 2": "0001011011","7 3": "0001011000","7 4": "00010100101","7 5": "00010011101","7 6": "00010010100","7 7": "000100000101",
    "7 8": "000011111000","7 9": "0000110010111","7 10": "0000110001101","7 11": "0000101110100","7 12": "0000101111100","7 13": "000001101111001","7 14": "000001101110100","7 15": "0000001000",
    "8 0": "0001010101","8 1": "0001010100","8 2": "0001010001","8 3": "00010011111","8 4": "00010011100","8 5": "00010001111","8 6": "000100000100","8 7": "000011111001",
    "8 8": "0000110101011","8 9": "0000110010001","8 10": "0000110001000","8 11": "0000101111111","8 12": "00001011010111","8 13": "00001011001001","8 14": "00001011000100","8 15": "0000000111",
    "9 0": "00010011010","9 1": "0001001100","9 2": "0001001001","9 3": "00010001101","9 4": "00010000011","9 5": "000100000000","9 6": "000011110101","9 7": "0000110101010",
    "9 8": "0000110010110","9 9": "0000110001010","9 10": "0000110000000","9 11": "00001011011111","9 12": "0000101100111","9 13": "00001011000110","9 14": "0000101100000","9 15": "00000001011",
    "10 0": "00010001011","10 1": "00010000001","10 2": "0001000011","10 3": "00001111101","10 4": "000011110111","10 5": "000011101001","10 6": "000011100101","10 7": "000011011011",
    "10 8": "0000110001001","10 9": "00001011100111","10 10": "00001011100001","10 11": "00001011010000","10 12": "000001101110101","10 13": "000001101110010","10 14": "00000110110111","10 15": "0000000100",
    "11 0": "000011110011","11 1": "00001111000","11 2": "00001110110","11 3": "00001110011","11 4": "000011100011","11 5": "000011011111","11 6": "0000110001100","11 7": "00001011101010",
    "11 8": "00001011100110","11 9": "00001011100000","11 10": "00001011010001","11 11": "00001011001000","11 12": "00001011000010","11 13": "0000011011111","11 14": "00000110110100","11 15": "00000000110",
    "12 0": "000011001010","12 1": "000011100000","12 2": "000011011110","12 3": "000011011010","12 4": "000011011000","12 5": "0000110000101","12 6": "0000110000010","12 7": "0000101111101",
    "12 8": "0000101101100","12 9": "000001101111000","12 10": "00000110111011","12 11": "00001011000011","12 12": "00000110111000","12 13": "00000110110101","12 14": "0000011011000000","12 15": "00000000100",
    "13 0": "00001011101011","13 1": "000011010011","13 2": "000011010010","13 3": "000011010000","13 4": "0000101110010","13 5": "0000101111011","13 6": "00001011011110","13 7": "00001011010011",
    "13 8": "00001011001010","13 9": "0000011011000111","13 10": "000001101110011","13 11": "000001101101101","13 12": "000001101101100","13 13": "00000110110000011","13 14": "000001101100001","13 15": "00000000010",
    "14 0": "0000101111001","14 1": "0000101110001","14 2": "00001100110","14 3": "000010111011","14 4": "00001011010110","14 5": "00001011010010","14 6": "0000101100110","14 7": "00001011000111",
    "14 8": "00001011000101","14 9": "000001101100010","14 10": "0000011011000110","14 11": "000001101100111","14 12": "00000110110000010","14 13": "000001101100110","14 14": "00000110110010","14 15": "00000000000",
    "15 0": "000001100","15 1": "00001010","15 2": "00000111","15 3": "000001011","15 4": "000001010","15 5": "0000010001","15 6": "0000001011","15 7": "0000001001",
    "15 8": "00000001101","15 9": "00000001100","15 10": "00000001010","15 11": "00000000111","15 12": "00000000101","15 13": "00000000011","15 14": "00000000001","15 15": "00000011"
};

const HuffmanTable24 = {
    "0 0": "1111","0 1": "1101","0 2": "101110","0 3": "1010000","0 4": "10010010","0 5": "100000110","0 6": "011111000","0 7": "0110110010",
    "0 8": "0110101010","0 9": "01010011101","0 10": "01010001101","0 11": "01010001001","0 12": "01001101101","0 13": "01000000101","0 14": "010000001000","0 15": "001011000",
    "1 0": "1110","1 1": "1100","1 2": "10101","1 3": "100110","1 4": "1000111","1 5": "10000010","1 6": "01111010","1 7": "011011000",
    "1 8": "011010001","1 9": "011000110","1 10": "0101000111","1 11": "0101011001","1 12": "0100111111","1 13": "0100101001","1 14": "0100010111","1 15": "00101010",
    "2 0": "101111","2 1": "10110","2 2": "101001","2 3": "1001010","2 4": "1000100","2 5": "10000000","2 6": "01111000","2 7": "011011101",
    "2 8": "011001111","2 9": "011000010","2 10": "010110110","2 11": "0101010100","2 12": "0100111011","2 13": "0100100111","2 14": "01000011101","2 15": "0010010",
    "3 0": "1010001","3 1": "100111","3 2": "1001011","3 3": "1000110","3 4": "10000110","3 5": "01111101","3 6": "01110100","3 7": "011011100",
    "3 8": "011001100","3 9": "010111110","3 10": "010110010","3 11": "0101000101","3 12": "0100110111","3 13": "0100100101","3 14": "0100001111","3 15": "0010000",
    "4 0": "10010011","4 1": "1001000","4 2": "1000101","4 3": "10000111","4 4": "01111111","4 5": "01110110","4 6": "01110000","4 7": "011010010",
    "4 8": "011001000","4 9": "010111100","4 10": "0101100000","4 11": "0101000011","4 12": "0100110010","4 13": "0100011101","4 14": "01000011100","4 15": "0001110",
    "5 0": "100000111","5 1": "1000010","5 2": "10000001","5 3": "01111110","5 4": "01110111","5 5": "01110010","5 6": "011010110","5 7": "011001010",
    "5 8": "011000000","5 9": "010110100","5 10": "0101010101","5 11": "0100111101","5 12": "0100101101","5 13": "0100011001","5 14": "0100000110","5 15": "0001100",
    "6 0": "011111001","6 1": "01111011","6 2": "01111001","6 3": "01110101","6 4": "01110001","6 5": "011010111","6 6": "011001110","6 7": "011000011",
    "6 8": "010111001","6 9": "0101011011","6 10": "0101001010","6 11": "0100110100","6 12": "0100100011","6 13": "0100010000","6 14": "01000001000","6 15": "0001010",
    "7 0": "0110110011","7 1": "01110011","7 2": "01101111","7 3": "01101101","7 4": "011010011","7 5": "011001011","7 6": "011000100","7 7": "010111011",
    "7 8": "0101100001","7 9": "0101001100","7 10": "0100111001","7 11": "0100101010","7 12": "0100011011","7 13": "01000010011","7 14": "00101111101","7 15": "00010001",
    "8 0": "0110101011","8 1": "011010100","8 2": "011010000","8 3": "011001101","8 4": "011001001","8 5": "011000001","8 6": "010111010","8 7": "010110001",
    "8 8": "010101001","8 9": "0101000000","8 10": "0100101111","8 11": "0100011110","8 12": "0100001100","8 13": "01000000010","8 14": "00101111001","8 15": "00010000",
    "9 0": "0101001111","9 1": "011000111","9 2": "011000101","9 3": "010111111","9 4": "010111101","9 5": "010110101","9 6": "010101110","9 7": "0101001101",
    "9 8": "0101000001","9 9": "0100110001","9 10": "0100100001","9 11": "0100010011","9 12": "01000001001","9 13": "00101111011","9 14": "00101110011","9 15": "00001011",
    "10 0": "01010011100","10 1": "010111000","10 2": "010110111","10 3": "010110011","10 4": "010101111","10 5": "0101011000","10 6": "0101001011","10 7": "0100111010",
    "10 8": "0100110000","10 9": "0100100010","10 10": "0100010101","10 11": "01000010010","10 12": "00101111111","10 13": "00101110101","10 14": "00101101110","10 15": "00001010",
    "11 0": "01010001100","11 1": "0101011010","11 2": "010101011","11 3": "010101000","11 4": "010100100","11 5": "0100111110","11 6": "0100110101","11 7": "0100101011",
    "11 8": "0100011111","11 9": "0100010100","11 10": "0100000111","11 11": "01000000001","11 12": "00101110111","11 13": "00101110000","11 14": "00101101010","11 15": "00000110",
    "12 0": "01010001000","12 1": "0101000010","12 2": "0100111100","12 3": "0100111000","12 4": "0100110011","12 5": "0100101110","12 6": "0100100100","12 7": "0100011100",
    "12 8": "0100001101","12 9": "0100000101","12 10": "01000000000","12 11": "00101111000","12 12": "00101110010","12 13": "00101101100","12 14": "00101100111","12 15": "00000100",
    "13 0": "01001101100","13 1": "0100101100","13 2": "0100101000","13 3": "0100100110","13 4": "0100100000","13 5": "0100011010","13 6": "0100010001","13 7": "0100001010",
    "13 8": "01000000011","13 9": "00101111100","13 10": "00101110110","13 11": "00101110001","13 12": "00101101101","13 13": "00101101001","13 14": "00101100101","13 15": "00000010",
    "14 0": "010000001001","14 1": "0100011000","14 2": "0100010110","14 3": "0100010010","14 4": "0100001011","14 5": "0100001000","14 6": "0100000011","14 7": "00101111110",
    "14 8": "00101111010","14 9": "00101110100","14 10": "00101101111","14 11": "00101101011","14 12": "00101101000","14 13": "00101100110","14 14": "00101100100","14 15": "00000000",
    "15 0": "00101011","15 1": "0010100","15 2": "0010011","15 3": "0010001","15 4": "0001111","15 5": "0001101","15 6": "0001011","15 7": "0001001",
    "15 8": "0000111","15 9": "0000110","15 10": "0000100","15 11": "00000111","15 12": "00000101","15 13": "00000011","15 14": "00000001","15 15": "0011"
};

const HuffmanTableDuple = [
    // Table 0
    {
        "maxvalue": 0,
        "linbits": 0,
        "table": {
            "0 0": ""
        }
    },

    // Table 1
    {
        "maxvalue": 1,
        "linbits": 0,
        "table": {
            "0 0": "1","0 1": "001","1 0": "01","1 1": "000"
        }
    },

    // Table 2
    {
        "maxvalue": 2,
        "linbits": 0,
        "table": {
            "0 0": "1","0 1": "010","0 2": "000001","1 0": "011","1 1": "001","1 2": "00001","2 0": "00011","2 1": "00010","2 2": "000000"
        }
    },

    // Table 3
    {
        "maxvalue": 2,
        "linbits": 0,
        "table": {
            "0 0": "11", "0 1": "10", "0 2": "000001", "1 0": "001", "1 1": "01", "1 2": "00001", "2 0": "00011", "2 1": "00010", "2 2": "000000"
        }
    },

    // Table 4
    null,

    // Table 5
    {
        "maxvalue": 3,
        "linbits": 0,
        "table": {
            "0 0": "1", "0 1": "010", "0 2": "000110", "0 3": "0000101", "1 0": "011", "1 1": "001", "1 2": "000100", "1 3": "0000100", "2 0": "000111", "2 1": "000101", "2 2": "0000111", "2 3": "00000001", "3 0": "0000110", "3 1": "000001", "3 2": "0000001", "3 3": "00000000"
        }
    },

    // Table 6
    {
        "maxvalue": 3,
        "linbits": 0,
        "table": {
            "0 0": "111", "0 1": "011", "0 2": "00101", "0 3": "0000001", "1 0": "110", "1 1": "10", "1 2": "0011", "1 3": "00010", "2 0": "0101", "2 1": "0100", "2 2": "00100", "2 3": "000001", "3 0": "000011", "3 1": "00011", "3 2": "000010", "3 3": "0000000"
        }
    },

    // Table 7
    {
        "maxvalue": 5,
        "linbits": 0,
        "table": {
            "0 0": "1", "0 1": "010", "0 2": "001010", "0 3": "00010011", "0 4": "00010000", "0 5": "000001010", "1 0": "011", "1 1": "0011", "1 2": "000111", "1 3": "0001010", "1 4": "0000101", "1 5": "00000011", "2 0": "001011", "2 1": "00100", "2 2": "0001101", "2 3": "00010001", "2 4": "00001000", "2 5": "000000100", "3 0": "0001100", "3 1": "0001011", "3 2": "00010010", "3 3": "000001111", "3 4": "000001011", "3 5": "000000010", "4 0": "0000111", "4 1": "0000110", "4 2": "00001001", "4 3": "000001110", "4 4": "000000011", "4 5": "0000000001", "5 0": "00000110", "5 1": "00000100", "5 2": "000000101", "5 3": "0000000011", "5 4": "0000000010", "5 5": "0000000000"
        }
    },

    // Table 8
    {
        "maxvalue": 5,
        "linbits": 0,
        "table": {
            "0 0": "11", "0 1": "100", "0 2": "000110", "0 3": "00010010", "0 4": "00001100", "0 5": "000000101", "1 0": "101", "1 1": "01", "1 2": "0010", "1 3": "00010000", "1 4": "00001001", "1 5": "00000011", "2 0": "000111", "2 1": "0011", "2 2": "000101", "2 3": "00001110", "2 4": "00000111", "2 5": "000000011", "3 0": "00010011", "3 1": "00010001", "3 2": "00001111", "3 3": "000001101", "3 4": "000001010", "3 5": "0000000100", "4 0": "00001101", "4 1": "0000101", "4 2": "00001000", "4 3": "000001011", "4 4": "0000000101", "4 5": "0000000001", "5 0": "000001100", "5 1": "00000100", "5 2": "000000100", "5 3": "000000001", "5 4": "00000000001", "5 5": "00000000000"
        }
    },

    // Table 9
    {
        "maxvalue": 5,
        "linbits": 0,
        "table": {
            "0 0": "111", "0 1": "101", "0 2": "01001", "0 3": "001110", "0 4": "00001111", "0 5": "000000111", "1 0": "110", "1 1": "100", "1 2": "0101", "1 3": "00101", "1 4": "000110", "1 5": "00000111", "2 0": "0111", "2 1": "0110", "2 2": "01000", "2 3": "001000", "2 4": "0001000", "2 5": "00000101", "3 0": "001111", "3 1": "00110", "3 2": "001001", "3 3": "0001010", "3 4": "0000101", "3 5": "00000001", "4 0": "0001011", "4 1": "000111", "4 2": "0001001", "4 3": "0000110", "4 4": "00000100", "4 5": "000000001", "5 0": "00001110", "5 1": "0000100", "5 2": "00000110", "5 3": "00000010", "5 4": "000000110", "5 5": "000000000"
        }
    },

    // Table 10
    {
        "maxvalue": 7,
        "linbits": 0,
        "table": {
            "0 0": "1", "0 1": "010", "0 2": "001010", "0 3": "00010111", "0 4": "000100011", "0 5": "000011110", "0 6": "000001100", "0 7": "0000010001",
            "1 0": "011", "1 1": "0011", "1 2": "001000", "1 3": "0001100", "1 4": "00010010", "1 5": "000010101", "1 6": "00001100", "1 7": "00000111",
            "2 0": "001011", "2 1": "001001", "2 2": "0001111", "2 3": "00010101", "2 4": "000100000", "2 5": "0000101000", "2 6": "000010011", "2 7": "000000110",
            "3 0": "0001110", "3 1": "0001101", "3 2": "00010110", "3 3": "000100010", "3 4": "0000101110", "3 5": "0000010111", "3 6": "000010010", "3 7": "0000000111",
            "4 0": "00010100", "4 1": "00010011", "4 2": "000100001", "4 3": "0000101111", "4 4": "0000011011", "4 5": "0000010110", "4 6": "0000001001", "4 7": "0000000011",
            "5 0": "000011111", "5 1": "000010110", "5 2": "0000101001", "5 3": "0000011010", "5 4": "00000010101", "5 5": "00000010100", "5 6": "0000000101", "5 7": "00000000011",
            "6 0": "00001110", "6 1": "00001101", "6 2": "000001010", "6 3": "0000001011", "6 4": "0000010000", "6 5": "0000000110", "6 6": "00000000101", "6 7": "00000000001",
            "7 0": "000001001", "7 1": "00001000", "7 2": "000000111", "7 3": "0000001000", "7 4": "0000000100", "7 5": "00000000100", "7 6": "00000000010", "7 7": "00000000000"
        }
    },

    // Table 11
    {
        "maxvalue": 7,
        "linbits": 0,
        "table": {
            "0 0": "11", "0 1": "100", "0 2": "01010", "0 3": "0011000", "0 4": "00100010", "0 5": "000100001", "0 6": "00010101", "0 7": "000001111",
            "1 0": "101", "1 1": "011", "1 2": "0100", "1 3": "001010", "1 4": "00100000", "1 5": "00010001", "1 6": "0001011", "1 7": "00001010",
            "2 0": "01011", "2 1": "00111", "2 2": "001101", "2 3": "0010010", "2 4": "00011110", "2 5": "000011111", "2 6": "00010100", "2 7": "00000101",
            "3 0": "0011001", "3 1": "001011", "3 2": "0010011", "3 3": "000111011", "3 4": "00011011", "3 5": "0000010010", "3 6": "00001100", "3 7": "000000101",
            "4 0": "00100011", "4 1": "00100001", "4 2": "00011111", "4 3": "000111010", "4 4": "000011110", "4 5": "0000010000", "4 6": "000000111", "4 7": "0000000101",
            "5 0": "00011100", "5 1": "00011010", "5 2": "000100000", "5 3": "0000010011", "5 4": "0000010001", "5 5": "00000001111", "5 6": "0000001000", "5 7": "00000001110",
            "6 0": "00001110", "6 1": "0001100", "6 2": "0001001", "6 3": "00001101", "6 4": "000001110", "6 5": "0000001001", "6 6": "0000000100", "6 7": "0000000001",
            "7 0": "00001011", "7 1": "0000100", "7 2": "00000110", "7 3": "000000110", "7 4": "0000000110", "7 5": "0000000011", "7 6": "0000000010", "7 7": "0000000000"
        }
    },

    // Table 12
    {
        "maxvalue": 7,
        "linbits": 0,
        "table": {
            "0 0": "1001", "0 1": "110", "0 2": "10000", "0 3": "0100001", "0 4": "00101001", "0 5": "000100111", "0 6": "000100110", "0 7": "000011010",
            "1 0": "111", "1 1": "101", "1 2": "0110", "1 3": "01001", "1 4": "0010111", "1 5": "0010000", "1 6": "00011010", "1 7": "00001011",
            "2 0": "10001", "2 1": "0111", "2 2": "01011", "2 3": "001110", "2 4": "0010101", "2 5": "00011110", "2 6": "0001010", "2 7": "00000111",
            "3 0": "010001", "3 1": "01010", "3 2": "001111", "3 3": "001100", "3 4": "0010010", "3 5": "00011100", "3 6": "00001110", "3 7": "00000101",
            "4 0": "0100000", "4 1": "001101", "4 2": "0010110", "4 3": "0010011", "4 4": "00010010", "4 5": "00010000", "4 6": "00001001", "4 7": "000000101",
            "5 0": "00101000", "5 1": "0010001", "5 2": "00011111", "5 3": "00011101", "5 4": "00010001", "5 5": "000001101", "5 6": "00000100", "5 7": "000000010",
            "6 0": "00011011", "6 1": "0001100", "6 2": "0001011", "6 3": "00001111", "6 4": "00001010", "6 5": "000000111", "6 6": "000000100", "6 7": "0000000001",
            "7 0": "000011011", "7 1": "00001100", "7 2": "00001000", "7 3": "000001100", "7 4": "000000110", "7 5": "000000011", "7 6": "000000001", "7 7": "0000000000"
        }
    },

    // Table 13
    {
        "maxvalue": 15,
        "linbits": 0,
        "table": {
            "0 0": "1", "0 1": "0101", "0 2": "001110", "0 3": "0010101", "0 4": "00100010", "0 5": "000110011", "0 6": "000101110", "0 7": "0001000111",
            "0 8": "000101010", "0 9": "0000110100", "0 10": "00001000100", "0 11": "00000110100", "0 12": "000001000011", "0 13": "000000101100", "0 14": "0000000101011", "0 15": "0000000010011",
            "1 0": "011", "1 1": "0100", "1 2": "001100", "1 3": "0010011", "1 4": "00011111", "1 5": "00011010", "1 6": "000101100", "1 7": "000100001",
            "1 8": "000011111", "1 9": "000011000", "1 10": "0000100000", "1 11": "0000011000", "1 12": "00000011111", "1 13": "000000100011", "1 14": "000000010110", "1 15": "000000001110",
            "2 0": "001111", "2 1": "001101", "2 2": "0010111", "2 3": "00100100", "2 4": "000111011", "2 5": "000110001", "2 6": "0001001101", "2 7": "0001000001",
            "2 8": "000011101", "2 9": "0000101000", "2 10": "0000011110", "2 11": "00000101000", "2 12": "00000011011", "2 13": "000000100001", "2 14": "0000000101010", "2 15": "0000000010000",
            "3 0": "0010110", "3 1": "0010100", "3 2": "00100101", "3 3": "000111101", "3 4": "000111000", "3 5": "0001001111", "3 6": "0001001001", "3 7": "0001000000",
            "3 8": "0000101011", "3 9": "00001001100", "3 10": "00000111000", "3 11": "00000100101", "3 12": "00000011010", "3 13": "000000011111", "3 14": "0000000011001", "3 15": "0000000001110",
            "4 0": "00100011", "4 1": "0010000", "4 2": "000111100", "4 3": "000111001", "4 4": "0001100001", "4 5": "0001001011", "4 6": "00001110010", "4 7": "00001011011",
            "4 8": "0000110110", "4 9": "00001001001", "4 10": "00000110111", "4 11": "000000101001", "4 12": "000000110000", "4 13": "0000000110101", "4 14": "0000000010111", "4 15": "00000000011000",
            "5 0": "000111010", "5 1": "00011011", "5 2": "000110010", "5 3": "0001100000", "5 4": "0001001100", "5 5": "0001000110", "5 6": "00001011101", "5 7": "00001010100",
            "5 8": "00001001101", "5 9": "00000111010", "5 10": "000001001111", "5 11": "00000011101", "5 12": "0000001001010", "5 13": "0000000110001", "5 14": "00000000101001", "5 15": "00000000010001",
            "6 0": "000101111", "6 1": "000101101", "6 2": "0001001110", "6 3": "0001001010", "6 4": "00001110011", "6 5": "00001011110", "6 6": "00001011010", "6 7": "00001001111",
            "6 8": "00001000101", "6 9": "000001010011", "6 10": "000001000111", "6 11": "000000110010", "6 12": "0000000111011", "6 13": "0000000100110", "6 14": "00000000100100", "6 15": "00000000001111",
            "7 0": "0001001000", "7 1": "000100010", "7 2": "0000111000", "7 3": "00001011111", "7 4": "00001011100", "7 5": "00001010101", "7 6": "000001011011", "7 7": "000001011010",
            "7 8": "000001010110", "7 9": "000001001001", "7 10": "0000001001101", "7 11": "0000001000001", "7 12": "0000000110011", "7 13": "00000000101100", "7 14": "0000000000101011", "7 15": "0000000000101010",
            "8 0": "000101011", "8 1": "00010100", "8 2": "000011110", "8 3": "0000101100", "8 4": "0000110111", "8 5": "00001001110", "8 6": "00001001000", "8 7": "000001010111",
            "8 8": "000001001110", "8 9": "000000111101", "8 10": "000000101110", "8 11": "0000000110110", "8 12": "0000000100101", "8 13": "00000000011110", "8 14": "000000000010100", "8 15": "000000000010000",
            "9 0": "0000110101", "9 1": "000011001", "9 2": "0000101001", "9 3": "0000100101", "9 4": "00000101100", "9 5": "00000111011", "9 6": "00000110110", "9 7": "0000001010001",
            "9 8": "000001000010", "9 9": "0000001001100", "9 10": "0000000111001", "9 11": "00000000110110", "9 12": "00000000100101", "9 13": "00000000010010", "9 14": "0000000000100111", "9 15": "000000000001011",
            "10 0": "0000100011", "10 1": "0000100001", "10 2": "0000011111", "10 3": "00000111001", "10 4": "00000101010", "10 5": "000001010010", "10 6": "000001001000", "10 7": "0000001010000",
            "10 8": "000000101111", "10 9": "0000000111010", "10 10": "00000000110111", "10 11": "0000000010101", "10 12": "00000000010110", "10 13": "000000000011010", "10 14": "0000000000100110", "10 15": "00000000000010110",
            "11 0": "00000110101", "11 1": "0000011001", "11 2": "0000010111", "11 3": "00000100110", "11 4": "000001000110", "11 5": "000000111100", "11 6": "000000110011", "11 7": "000000100100",
            "11 8": "0000000110111", "11 9": "0000000011010", "11 10": "0000000100010", "11 11": "00000000010111", "11 12": "000000000011011", "11 13": "000000000001110", "11 14": "000000000001001", "11 15": "0000000000000111",
            "12 0": "00000100010", "12 1": "00000100000", "12 2": "00000011100", "12 3": "000000100111", "12 4": "000000110001", "12 5": "0000001001011", "12 6": "000000011110", "12 7": "0000000110100",
            "12 8": "00000000110000", "12 9": "00000000101000", "12 10": "000000000110100", "12 11": "000000000011100", "12 12": "000000000010010", "12 13": "0000000000010001", "12 14": "0000000000001001", "12 15": "0000000000000101",
            "13 0": "000000101101", "13 1": "00000010101", "13 2": "000000100010", "13 3": "0000001000000", "13 4": "0000000111000", "13 5": "0000000110010", "13 6": "00000000110001", "13 7": "00000000101101",
            "13 8": "00000000011111", "13 9": "00000000010011", "13 10": "00000000001100", "13 11": "000000000001111", "13 12": "0000000000001010", "13 13": "000000000000111", "13 14": "0000000000000110", "13 15": "0000000000000011",
            "14 0": "0000000110000", "14 1": "000000010111", "14 2": "000000010100", "14 3": "0000000100111", "14 4": "0000000100100", "14 5": "0000000100011", "14 6": "000000000110101", "14 7": "00000000010101",
            "14 8": "00000000010000", "14 9": "00000000000010111", "14 10": "000000000001101", "14 11": "000000000001010", "14 12": "000000000000110", "14 13": "00000000000000001", "14 14": "0000000000000100", "14 15": "0000000000000010",
            "15 0": "000000010000", "15 1": "000000001111", "15 2": "0000000010001", "15 3": "00000000011011", "15 4": "00000000011001", "15 5": "00000000010100", "15 6": "000000000011101", "15 7": "00000000001011",
            "15 8": "000000000010001", "15 9": "000000000001100", "15 10": "0000000000010000", "15 11": "0000000000001000", "15 12": "0000000000000000001", "15 13": "000000000000000001", "15 14": "0000000000000000000", "15 15": "0000000000000001"
        }
    },

    // Table 14
    null,

    // Table 15
    {
        "maxvalue": 15,
        "linbits": 0,
        "table": {
            "0 0": "111", "0 1": "1100", "0 2": "10010", "0 3": "0110101", "0 4": "0101111", "0 5": "01001100", "0 6": "001111100", "0 7": "001101100",
            "0 8": "001011001", "0 9": "0001111011", "0 10": "0001101100", "0 11": "00001110111", "0 12": "00001101011", "0 13": "00001010001", "0 14": "000001111010", "0 15": "0000000111111",
            "1 0": "1101", "1 1": "101", "1 2": "10000", "1 3": "011011", "1 4": "0101110", "1 5": "0100100", "1 6": "00111101", "1 7": "00110011",
            "1 8": "00101010", "1 9": "001000110", "1 10": "000110100", "1 11": "0001010011", "1 12": "0001000001", "1 13": "0000101001", "1 14": "00000111011", "1 15": "00000100100",
            "2 0": "10011", "2 1": "10001", "2 2": "01111", "2 3": "011000", "2 4": "0101001", "2 5": "0100010", "2 6": "00111011", "2 7": "00110000",
            "2 8": "00101000", "2 9": "001000000", "2 10": "000110010", "2 11": "0001001110", "2 12": "0000111110", "2 13": "00001010000", "2 14": "00000111000", "2 15": "00000100001",
            "3 0": "011101", "3 1": "011100", "3 2": "011001", "3 3": "0101011", "3 4": "0100111", "3 5": "00111111", "3 6": "00110111", "3 7": "001011101",
            "3 8": "001001100", "3 9": "000111011", "3 10": "0001011101", "3 11": "0001001000", "3 12": "0000110110", "3 13": "00001001011", "3 14": "00000110010", "3 15": "00000011101",
            "4 0": "0110100", "4 1": "010110", "4 2": "0101010", "4 3": "0101000", "4 4": "01000011", "4 5": "00111001", "4 6": "001011111", "4 7": "001001111",
            "4 8": "001001000", "4 9": "000111001", "4 10": "0001011001", "4 11": "0001000101", "4 12": "0000110001", "4 13": "00001000010", "4 14": "00000101110", "4 15": "00000011011",
            "5 0": "01001101", "5 1": "0100101", "5 2": "0100011", "5 3": "01000010", "5 4": "00111010", "5 5": "00110100", "5 6": "001011011", "5 7": "001001010",
            "5 8": "000111110", "5 9": "000110000", "5 10": "0001001111", "5 11": "0000111111", "5 12": "00001011010", "5 13": "00000111110", "5 14": "00000101000", "5 15": "000000100110",
            "6 0": "001111101", "6 1": "0100000", "6 2": "00111100", "6 3": "00111000", "6 4": "00110010", "6 5": "001011100", "6 6": "001001110", "6 7": "001000001",
            "6 8": "000110111", "6 9": "0001010111", "6 10": "0001000111", "6 11": "0000110011", "6 12": "00001001001", "6 13": "00000110011", "6 14": "000001000110", "6 15": "000000011110",
            "7 0": "001101101", "7 1": "00110101", "7 2": "00110001", "7 3": "001011110", "7 4": "001011000", "7 5": "001001011", "7 6": "001000010", "7 7": "0001111010",
            "7 8": "0001011011", "7 9": "0001001001", "7 10": "0000111000", "7 11": "0000101010", "7 12": "00001000000", "7 13": "00000101100", "7 14": "00000010101", "7 15": "000000011001",
            "8 0": "001011010", "8 1": "00101011", "8 2": "00101001", "8 3": "001001101", "8 4": "001001001", "8 5": "000111111", "8 6": "000111000", "8 7": "0001011100",
            "8 8": "0001001101", "8 9": "0001000010", "8 10": "0000101111", "8 11": "00001000011", "8 12": "00000110000", "8 13": "000000110101", "8 14": "000000100100", "8 15": "000000010100",
            "9 0": "001000111", "9 1": "00100010", "9 2": "001000011", "9 3": "000111100", "9 4": "000111010", "9 5": "000110001", "9 6": "0001011000", "9 7": "0001001100",
            "9 8": "0001000011", "9 9": "00001101010", "9 10": "00001000111", "9 11": "00000110110", "9 12": "00000100110", "9 13": "000000100111", "9 14": "000000010111", "9 15": "000000001111",
            "10 0": "0001101101", "10 1": "000110101", "10 2": "000110011", "10 3": "000101111", "10 4": "0001011010", "10 5": "0001010010", "10 6": "0000111010", "10 7": "0000111001",
            "10 8": "0000110000", "10 9": "00001001000", "10 10": "00000111001", "10 11": "00000101001", "10 12": "00000010111", "10 13": "000000011011", "10 14": "0000000111110", "10 15": "000000001001",
            "11 0": "0001010110", "11 1": "000101010", "11 2": "000101000", "11 3": "000100101", "11 4": "0001000110", "11 5": "0001000000", "11 6": "0000110100", "11 7": "0000101011",
            "11 8": "00001000110", "11 9": "00000110111", "11 10": "00000101010", "11 11": "00000011001", "11 12": "000000011101", "11 13": "000000010010", "11 14": "000000001011", "11 15": "0000000001011",
            "12 0": "00001110110", "12 1": "0001000100", "12 2": "000011110", "12 3": "0000110111", "12 4": "0000110010", "12 5": "0000101110", "12 6": "00001001010", "12 7": "00001000001",
            "12 8": "00000110001", "12 9": "00000100111", "12 10": "00000011000", "12 11": "00000010000", "12 12": "000000010110", "12 13": "000000001101", "12 14": "0000000001110", "12 15": "0000000000111",
            "13 0": "00001011011", "13 1": "0000101100", "13 2": "0000100111", "13 3": "0000100110", "13 4": "0000100010", "13 5": "00000111111", "13 6": "00000110100", "13 7": "00000101101",
            "13 8": "00000011111", "13 9": "000000110100", "13 10": "000000011100", "13 11": "000000010011", "13 12": "000000001110", "13 13": "000000001000", "13 14": "0000000001001", "13 15": "0000000000011",
            "14 0": "000001111011", "14 1": "00000111100", "14 2": "00000111010", "14 3": "00000110101", "14 4": "00000101111", "14 5": "00000101011", "14 6": "00000100000", "14 7": "00000010110",
            "14 8": "000000100101", "14 9": "000000011000", "14 10": "000000010001", "14 11": "000000001100", "14 12": "0000000001111", "14 13": "0000000001010", "14 14": "000000000010", "14 15": "0000000000001",
            "15 0": "000001000111", "15 1": "00000100101", "15 2": "00000100010", "15 3": "00000011110", "15 4": "00000011100", "15 5": "00000010100", "15 6": "00000010001", "15 7": "000000011010",
            "15 8": "000000010101", "15 9": "000000010000", "15 10": "000000001010", "15 11": "000000000110", "15 12": "0000000001000", "15 13": "0000000000110", "15 14": "0000000000010", "15 15": "0000000000000"
        }
    },

    // Table 16
    {
        "maxvalue": 16,
        "linbits": 1,
        "table": HuffmanTable16
    },

    // Table 17
    {
        "maxvalue": 18,
        "linbits": 2,
        "table": HuffmanTable16
    },

    // Table 18
    {
        "maxvalue": 22,
        "linbits": 3,
        "table": HuffmanTable16
    },

    // Table 19
    {
        "maxvalue": 30,
        "linbits": 4,
        "table": HuffmanTable16
    },

    // Table 20
    {
        "maxvalue": 78,
        "linbits": 6,
        "table": HuffmanTable16
    },

    // Table 21
    {
        "maxvalue": 270,
        "linbits": 8,
        "table": HuffmanTable16
    },

    // Table 22
    {
        "maxvalue": 1038,
        "linbits": 10,
        "table": HuffmanTable16
    },

    // Table 23
    {
        "maxvalue": 8206,
        "linbits": 13,
        "table": HuffmanTable16
    },

    // Table 24
    {
        "maxvalue": 30,
        "linbits": 4,
        "table": HuffmanTable24
    },

    // Table 25
    {
        "maxvalue": 46,
        "linbits": 5,
        "table": HuffmanTable24
    },

    // Table 26
    {
        "maxvalue": 78,
        "linbits": 6,
        "table": HuffmanTable24
    },

    // Table 27
    {
        "maxvalue": 142,
        "linbits": 7,
        "table": HuffmanTable24
    },

    // Table 28
    {
        "maxvalue": 270,
        "linbits": 8,
        "table": HuffmanTable24
    },

    // Table 29
    {
        "maxvalue": 526,
        "linbits": 9,
        "table": HuffmanTable24
    },

    // Table 30
    {
        "maxvalue": 2062,
        "linbits": 11,
        "table": HuffmanTable24
    },

    // Table 31
    {
        "maxvalue": 8206,
        "linbits": 13,
        "table": HuffmanTable24
    }
];



/**
 * 注：可用以下代码格式化
 * 
const str = `
0 0 1 1
0 1 3 010
0 2 6 000001
1 0 3 011
1 1 3 001
1 2 5 00001
...
`;
let buffer = new Array();
let lines = str.split("\n");

let prevX = 0;
for(let i = 0; i < lines.length; i++) {
    let line = lines[i].trim();
    if(line.length <= 0) continue;
    let fields = line.split(/\s+/gi);
    let crlf = (fields[1] === "15" || fields[1] === "7") ? "\n" : " ";
    let newline = `"${fields[0]} ${fields[1]}": "${fields[3]}",${crlf}`;
    buffer.push(newline);
}
LOG(buffer.join(""));
 */


// 哈夫曼表（数组实现）

let HTABLES = new Array();

for(let i = 0; i < 32; i++) {
    HTABLES[i] = new Array();
    if(!HuffmanTableDuple[i]) continue;
    let htmap = HuffmanTableDuple[i].table;
    for(let key in htmap) {
        let x = parseInt(key.split(" ")[0]);
        let y = parseInt(key.split(" ")[1]);
        HTABLES[i][x * 16 + y] = htmap[key];
    }
    HuffmanTableDuple[i].table = HTABLES[i];
}

// 量化计算 数值表

const ROOT_2_4 = 1.189207115002721;

let INV_POWER_OF_ROOT_2_4 = new Array();
let POWER_OF_ROOT_2_4 = new Array();

for(let i = 0; i < 512; i++) {
    POWER_OF_ROOT_2_4[i] = Math.pow(ROOT_2_4, (i - 256));
    INV_POWER_OF_ROOT_2_4[i] = 1.0 / POWER_OF_ROOT_2_4[i];
}



/**
 * 尺度因子频带划分表
 * @reference Table.B.8(p62)
 */
const ScaleFactorBands = [
    // 32kHz
    [
        // Long Blocks
        [
            [0, 3],     [4, 7],     [8, 11],    [12, 15],   [16, 19], [20, 23],
            [24, 29],   [30, 35],   [36, 43],   [44, 53],   [54, 65],
            [66, 81],   [82, 101],  [102, 125], [126, 155], [156, 193],
            [194, 239], [240, 295], [296, 363], [364, 447], [448, 549]
        ],
        // Short Blocks
        [
            [0, 3],   [4, 7],   [8, 11],  [12, 15],  [16, 21],   [22, 29],
            [30, 41], [42, 57], [58, 77], [78, 103], [104, 137], [138, 179]
        ]
    ],
    // 44.1kHz
    [
        // Long Blocks
        [
            [0, 3],     [4, 7],     [8, 11],    [12, 15],   [16, 19], [20, 23],
            [24, 29],   [30, 35],   [36, 43],   [44, 51],   [52, 61],
            [62, 73],   [74, 89],   [90, 109],  [110, 133], [134, 161],
            [162, 195], [196, 237], [238, 287], [288, 341], [342, 417]
        ],
        // Short Blocks
        [
            [0, 3],   [4, 7],   [8, 11],  [12, 15], [16, 21],  [22, 29],
            [30, 39], [40, 51], [52, 65], [66, 83], [84, 105], [106, 135]
        ]
    ],
    // 48kHz
    [
        // Long Blocks
        [
            [0, 3],     [4, 7],     [8, 11],    [12, 15],   [16, 19], [20, 23],
            [24, 29],   [30, 35],   [36, 41],   [42, 49],   [50, 59],
            [60, 71],   [72, 87],   [88, 105],  [106, 127], [128, 155],
            [156, 189], [190, 229], [230, 275], [276, 329], [330, 383]
        ],
        // Short Blocks
        [
            [0, 3],   [4, 7],   [8, 11],  [12, 15], [16, 21], [22, 27],
            [28, 37], [38, 49], [50, 63], [64, 79], [80, 99], [100, 125]
        ]
    ]
];


// 尺度因子长度编码

const SF_COMPRESS_INDEX = [
    [0, 0],[0, 1],[0, 2],[0, 3],[3, 0],[1, 1],[1, 2],[1, 3],
    [2, 1],[2, 2],[2, 3],[3, 1],[3, 2],[3, 3],[4, 2],[4, 3]]; // @reference 2.4.2.7(p26)
const SF_COMPRESS = [
// slen2= 0   1   2   3
        [ 0,  1,  2,  3], // slen1 = 0
        [-1,  5,  6,  7], // slen1 = 1
        [-1,  8,  9, 10], // slen1 = 2
        [ 4, 11, 12, 13], // slen1 = 3
        [-1, -1, 14, 15], // slen1 = 4
];


/********************************************************
 * 
 *  心 理 声 学 模 型 参 数
 * 
 ********************************************************/

// 以下是标准附录C提供的参数，Layer3编码器实际使用这些参数进行PAM参数的计算。直接从dist10的源码中复制而来。

// Table C.7 [SampleRateIndex][BlockType][PartitionIndex]
const PAM_TABLES_C7 = [

    // 32000Hz
    [
        // 32000Hz, Long Blocks
        [
        //  lines  minval    qthr      norm       bval
/*  0 */  [ 2,     24.5,     4.532,    0.997,     0.313],
/*  1 */  [ 2,     24.5,     4.532,    0.893,     0.938],
/*  2 */  [ 2,     24.5,     1.809,    0.881,     1.563],
/*  3 */  [ 2,     20.0,     0.181,    0.873,     2.188],
/*  4 */  [ 2,     20.0,     0.181,    0.872,     2.813],
/*  5 */  [ 2,     20.0,     0.057,    0.871,     3.438],
/*  6 */  [ 2,     20.0,     0.018,    0.860,     4.045],
/*  7 */  [ 2,     20.0,     0.018,    0.839,     4.625],
/*  8 */  [ 2,     18.0,     0.018,    0.812,     5.173],
/*  9 */  [ 2,     18.0,     0.018,    0.784,     5.698],
/* 10 */  [ 2,     12.0,     0.018,    0.741,     6.185],
/* 11 */  [ 2,     12.0,     0.018,    0.697,     6.634],
/* 12 */  [ 2,      6.0,     0.018,    0.674,     7.070],
/* 13 */  [ 2,      6.0,     0.018,    0.651,     7.492],
/* 14 */  [ 2,      6.0,     0.018,    0.633,     7.905],
/* 15 */  [ 2,      3.0,     0.018,    0.611,     8.305],
/* 16 */  [ 2,      3.0,     0.018,    0.589,     8.695],
/* 17 */  [ 2,      3.0,     0.018,    0.575,     9.064],
/* 18 */  [ 3,      3.0,     0.027,    0.654,     9.484],
/* 19 */  [ 3,      3.0,     0.027,    0.724,     9.966],
/* 20 */  [ 3,      0.0,     0.027,    0.701,    10.426],
/* 21 */  [ 3,      0.0,     0.027,    0.673,    10.866],
/* 22 */  [ 3,      0.0,     0.027,    0.631,    11.279],
/* 23 */  [ 3,      0.0,     0.027,    0.592,    11.669],
/* 24 */  [ 3,      0.0,     0.027,    0.553,    12.042],
/* 25 */  [ 3,      0.0,     0.027,    0.510,    12.386],
/* 26 */  [ 3,      0.0,     0.027,    0.506,    12.721],
/* 27 */  [ 4,      0.0,     0.036,    0.562,    13.091],
/* 28 */  [ 4,      0.0,     0.036,    0.598,    13.488],
/* 29 */  [ 4,      0.0,     0.036,    0.589,    13.873],
/* 30 */  [ 5,      0.0,     0.045,    0.607,    14.268],
/* 31 */  [ 5,      0.0,     0.045,    0.620,    14.679],
/* 32 */  [ 5,      0.0,     0.045,    0.580,    15.067],
/* 33 */  [ 5,      0.0,     0.045,    0.532,    15.424],
/* 34 */  [ 5,      0.0,     0.045,    0.517,    15.771],
/* 35 */  [ 6,      0.0,     0.054,    0.517,    16.120],
/* 36 */  [ 6,      0.0,     0.054,    0.509,    16.466],
/* 37 */  [ 6,      0.0,     0.054,    0.506,    16.807],
/* 38 */  [ 8,      0.0,     0.072,    0.522,    17.158],
/* 39 */  [ 8,      0.0,     0.072,    0.531,    17.518],
/* 40 */  [ 8,      0.0,     0.072,    0.519,    17.869],
/* 41 */  [10,      0.0,     0.090,    0.512,    18.215],
/* 42 */  [10,      0.0,     0.090,    0.509,    18.563],
/* 43 */  [10,      0.0,     0.090,    0.498,    18.902],
/* 44 */  [12,      0.0,     0.109,    0.494,    19.239],
/* 45 */  [12,      0.0,     0.109,    0.501,    19.580],
/* 46 */  [13,      0.0,     0.118,    0.508,    19.925],
/* 47 */  [14,      0.0,     0.252,    0.502,    20.269],
/* 48 */  [14,      0.0,     0.252,    0.493,    20.606],
/* 49 */  [16,      0.0,     0.288,    0.497,    20.944],
/* 50 */  [20,      0.0,     0.572,    0.506,    21.288],
/* 51 */  [20,      0.0,     0.572,    0.510,    21.635],
/* 52 */  [23,      0.0,     0.658,    0.504,    21.980],
/* 53 */  [27,      0.0,     2.441,    0.496,    22.319],
/* 54 */  [27,      0.0,     2.441,    0.493,    22.656],
/* 55 */  [32,      0.0,     2.893,    0.490,    22.993],
/* 56 */  [37,      0.0,    33.458,    0.482,    23.326],
/* 57 */  [37,      0.0,    33.458,    0.458,    23.656],
/* 58 */  [12,      0.0,    10.851,    0.500,    23.937]
        ],

        // 32000Hz, Short Blocks
        [
        //  lines   qthr      norm     SNR         bval
/*  0 */  [ 1,      4.532,    1.000,   -8.240,     0.000],
/*  1 */  [ 1,      0.904,    0.985,   -8.240,     1.250],
/*  2 */  [ 1,      0.090,    0.983,   -8.240,     2.500],
/*  3 */  [ 1,      0.029,    0.983,   -8.240,     3.750],
/*  4 */  [ 1,      0.009,    0.981,   -8.240,     4.909],
/*  5 */  [ 1,      0.009,    0.975,   -8.240,     5.958],
/*  6 */  [ 1,      0.009,    0.959,   -8.240,     6.857],
/*  7 */  [ 1,      0.009,    0.944,   -8.240,     7.700],
/*  8 */  [ 1,      0.009,    0.933,   -8.240,     8.500],
/*  9 */  [ 1,      0.009,    0.920,   -8.240,     9.237],
/* 10 */  [ 1,      0.009,    0.892,   -7.447,     9.895],
/* 11 */  [ 1,      0.009,    0.863,   -7.447,    10.500],
/* 12 */  [ 1,      0.009,    0.839,   -7.447,    11.083],
/* 13 */  [ 1,      0.009,    0.786,   -7.447,    11.604],
/* 14 */  [ 1,      0.009,    0.755,   -7.447,    12.107],
/* 15 */  [ 1,      0.009,    0.698,   -7.447,    12.554],
/* 16 */  [ 1,      0.009,    0.673,   -7.447,    13.000],
/* 17 */  [ 1,      0.009,    0.605,   -7.447,    13.391],
/* 18 */  [ 1,      0.009,    0.629,   -7.447,    13.781],
/* 19 */  [ 2,      0.018,    0.883,   -7.447,    14.474],
/* 20 */  [ 2,      0.018,    0.858,   -6.990,    15.096],
/* 21 */  [ 2,      0.018,    0.829,   -6.990,    15.667],
/* 22 */  [ 2,      0.018,    0.767,   -6.990,    16.177],
/* 23 */  [ 2,      0.018,    0.705,   -6.990,    16.636],
/* 24 */  [ 2,      0.018,    0.637,   -6.990,    17.057],
/* 25 */  [ 2,      0.018,    0.564,   -6.990,    17.429],
/* 26 */  [ 2,      0.018,    0.550,   -6.990,    17.786],
/* 27 */  [ 3,      0.027,    0.603,   -6.990,    18.177],
/* 28 */  [ 3,      0.027,    0.635,   -6.990,    18.597],
/* 29 */  [ 3,      0.027,    0.592,   -6.990,    18.994],
/* 30 */  [ 3,      0.027,    0.533,   -6.020,    19.352],
/* 31 */  [ 3,      0.027,    0.518,   -6.020,    19.693],
/* 32 */  [ 4,      0.072,    0.568,   -6.020,    20.066],
/* 33 */  [ 4,      0.072,    0.594,   -6.020,    20.462],
/* 34 */  [ 4,      0.072,    0.568,   -5.229,    20.841],
/* 35 */  [ 5,      0.143,    0.536,   -5.229,    21.201],
/* 36 */  [ 5,      0.143,    0.522,   -5.229,    21.549],
/* 37 */  [ 6,      0.172,    0.542,   -5.229,    21.911],
/* 38 */  [ 7,      0.633,    0.539,   -4.559,    22.275],
/* 39 */  [ 7,      0.633,    0.519,   -4.559,    22.625],
/* 40 */  [ 8,      0.723,    0.514,   -3.980,    22.971],
/* 41 */  [10,      9.043,    0.518,   -3.980,    23.321]
        ]
    ],

    // 44100Hz
    [
        // 44100Hz, Long Blocks
        [
        //  lines  minval    qthr      norm       bval
/*  0 */  [ 1,     24.5,     4.532,    0.951,     0.000],
/*  1 */  [ 1,     24.5,     4.532,    0.700,     0.431],
/*  2 */  [ 1,     24.5,     4.532,    0.681,     0.861],
/*  3 */  [ 1,     24.5,     0.904,    0.675,     1.292],
/*  4 */  [ 1,     24.5,     0.904,    0.667,     1.723],
/*  5 */  [ 1,     20.0,     0.090,    0.665,     2.153],
/*  6 */  [ 1,     20.0,     0.090,    0.664,     2.584],
/*  7 */  [ 1,     20.0,     0.029,    0.664,     3.015],
/*  8 */  [ 1,     20.0,     0.029,    0.664,     3.445],
/*  9 */  [ 1,     20.0,     0.029,    0.655,     3.876],
/* 10 */  [ 1,     20.0,     0.009,    0.616,     4.279],
/* 11 */  [ 1,     20.0,     0.009,    0.597,     4.670],
/* 12 */  [ 1,     18.0,     0.009,    0.578,     5.057],
/* 13 */  [ 1,     18.0,     0.009,    0.541,     5.416],
/* 14 */  [ 1,     18.0,     0.009,    0.575,     5.774],
/* 15 */  [ 2,     12.0,     0.018,    0.856,     6.422],
/* 16 */  [ 2,      6.0,     0.018,    0.846,     7.026],
/* 17 */  [ 2,      6.0,     0.018,    0.840,     7.609],
/* 18 */  [ 2,      3.0,     0.018,    0.822,     8.168],
/* 19 */  [ 2,      3.0,     0.018,    0.800,     8.710],
/* 20 */  [ 2,      3.0,     0.018,    0.753,     9.207],
/* 21 */  [ 2,      3.0,     0.018,    0.704,     9.662],
/* 22 */  [ 2,      0.0,     0.018,    0.674,    10.099],
/* 23 */  [ 2,      0.0,     0.018,    0.640,    10.515],
/* 24 */  [ 2,      0.0,     0.018,    0.609,    10.917],
/* 25 */  [ 2,      0.0,     0.018,    0.566,    11.293],
/* 26 */  [ 2,      0.0,     0.018,    0.535,    11.652],
/* 27 */  [ 2,      0.0,     0.018,    0.531,    11.997],
/* 28 */  [ 3,      0.0,     0.027,    0.615,    12.394],
/* 29 */  [ 3,      0.0,     0.027,    0.686,    12.850],
/* 30 */  [ 3,      0.0,     0.027,    0.650,    13.277],
/* 31 */  [ 3,      0.0,     0.027,    0.612,    13.681],
/* 32 */  [ 3,      0.0,     0.027,    0.567,    14.062],
/* 33 */  [ 3,      0.0,     0.027,    0.520,    14.411],
/* 34 */  [ 3,      0.0,     0.027,    0.513,    14.751],
/* 35 */  [ 4,      0.0,     0.036,    0.557,    15.119],
/* 36 */  [ 4,      0.0,     0.036,    0.584,    15.508],
/* 37 */  [ 4,      0.0,     0.036,    0.570,    15.883],
/* 38 */  [ 5,      0.0,     0.045,    0.579,    16.263],
/* 39 */  [ 5,      0.0,     0.045,    0.585,    16.654],
/* 40 */  [ 5,      0.0,     0.045,    0.548,    17.020],
/* 41 */  [ 6,      0.0,     0.054,    0.536,    17.374],
/* 42 */  [ 6,      0.0,     0.054,    0.550,    17.744],
/* 43 */  [ 7,      0.0,     0.063,    0.532,    18.104],
/* 44 */  [ 7,      0.0,     0.063,    0.504,    18.447],
/* 45 */  [ 7,      0.0,     0.063,    0.496,    18.782],
/* 46 */  [ 9,      0.0,     0.081,    0.517,    19.130],
/* 47 */  [ 9,      0.0,     0.081,    0.527,    19.487],
/* 48 */  [ 9,      0.0,     0.081,    0.516,    19.838],
/* 49 */  [10,      0.0,     0.180,    0.497,    20.179],
/* 50 */  [10,      0.0,     0.180,    0.489,    20.510],
/* 51 */  [11,      0.0,     0.198,    0.502,    20.852],
/* 52 */  [14,      0.0,     0.400,    0.501,    21.196],
/* 53 */  [14,      0.0,     0.400,    0.491,    21.531],
/* 54 */  [15,      0.0,     0.429,    0.497,    21.870],
/* 55 */  [20,      0.0,     1.808,    0.504,    22.214],
/* 56 */  [20,      0.0,     1.808,    0.504,    22.558],
/* 57 */  [21,      0.0,     1.898,    0.495,    22.898],
/* 58 */  [27,      0.0,    24.416,    0.486,    23.232],
/* 59 */  [27,      0.0,    24.416,    0.484,    23.564],
/* 60 */  [36,      0.0,    32.554,    0.483,    23.897],
/* 61 */  [73,      0.0,   660.124,    0.475,    24.229],
/* 62 */  [18,      0.0,   162.770,    0.515,    24.442]
        ],

        // 44100Hz, Short Blocks
        [
        //  lines   qthr      norm     SNR         bval
/*  0 */  [ 1,      4.532,    1.000,   -8.240,     0.000],
/*  1 */  [ 1,      0.904,    0.983,   -8.240,     1.723],
/*  2 */  [ 1,      0.029,    0.983,   -8.240,     3.445],
/*  3 */  [ 1,      0.009,    0.982,   -8.240,     5.057],
/*  4 */  [ 1,      0.009,    0.985,   -8.240,     6.422],
/*  5 */  [ 1,      0.009,    0.983,   -8.240,     7.609],
/*  6 */  [ 1,      0.009,    0.978,   -8.240,     8.710],
/*  7 */  [ 1,      0.009,    0.967,   -8.240,     9.662],
/*  8 */  [ 1,      0.009,    0.948,   -8.240,    10.515],
/*  9 */  [ 1,      0.009,    0.930,   -8.240,    11.293],
/* 10 */  [ 1,      0.009,    0.914,   -7.447,    12.009],
/* 11 */  [ 1,      0.009,    0.870,   -7.447,    12.625],
/* 12 */  [ 1,      0.009,    0.845,   -7.447,    13.210],
/* 13 */  [ 1,      0.009,    0.800,   -7.447,    13.748],
/* 14 */  [ 1,      0.009,    0.749,   -7.447,    14.241],
/* 15 */  [ 1,      0.009,    0.701,   -7.447,    14.695],
/* 16 */  [ 1,      0.009,    0.653,   -7.447,    15.125],
/* 17 */  [ 1,      0.009,    0.590,   -7.447,    15.508],
/* 18 */  [ 1,      0.009,    0.616,   -7.447,    15.891],
/* 19 */  [ 2,      0.018,    0.860,   -7.447,    16.537],
/* 20 */  [ 2,      0.018,    0.823,   -6.990,    17.112],
/* 21 */  [ 2,      0.018,    0.762,   -6.990,    17.621],
/* 22 */  [ 2,      0.018,    0.688,   -6.990,    18.073],
/* 23 */  [ 2,      0.018,    0.612,   -6.990,    18.470],
/* 24 */  [ 2,      0.018,    0.594,   -6.990,    18.849],
/* 25 */  [ 3,      0.027,    0.658,   -6.990,    19.271],
/* 26 */  [ 3,      0.027,    0.706,   -6.990,    19.741],
/* 27 */  [ 3,      0.054,    0.660,   -6.990,    20.177],
/* 28 */  [ 3,      0.054,    0.606,   -6.990,    20.576],
/* 29 */  [ 3,      0.054,    0.565,   -6.990,    20.950],
/* 30 */  [ 4,      0.114,    0.560,   -6.020,    21.316],
/* 31 */  [ 4,      0.114,    0.579,   -6.020,    21.699],
/* 32 */  [ 5,      0.452,    0.567,   -6.020,    22.078],
/* 33 */  [ 5,      0.452,    0.534,   -6.020,    22.438],
/* 34 */  [ 5,      0.452,    0.514,   -5.229,    22.782],
/* 35 */  [ 7,      6.330,    0.520,   -5.229,    23.133],
/* 36 */  [ 7,      6.330,    0.518,   -5.229,    23.484],
/* 37 */  [ 7,      6.330,    0.507,   -5.229,    23.828],
/* 38 */  [19,    171.813,    0.447,   -4.559,    24.173]
        ]
    ],

    // 48000Hz
    [
        // 48000Hz, Long Blocks
        [
        //  lines  minval    qthr      norm       bval
/*  0 */  [ 1,     24.5,     4.532,    0.970,     0.000],
/*  1 */  [ 1,     24.5,     4.532,    0.755,     0.469],
/*  2 */  [ 1,     24.5,     4.532,    0.738,     0.938],
/*  3 */  [ 1,     24.5,     0.904,    0.730,     1.406],
/*  4 */  [ 1,     24.5,     0.904,    0.724,     1.875],
/*  5 */  [ 1,     20.0,     0.090,    0.723,     2.344],
/*  6 */  [ 1,     20.0,     0.090,    0.723,     2.813],
/*  7 */  [ 1,     20.0,     0.029,    0.723,     3.281],
/*  8 */  [ 1,     20.0,     0.029,    0.718,     3.750],
/*  9 */  [ 1,     20.0,     0.009,    0.690,     4.199],
/* 10 */  [ 1,     20.0,     0.009,    0.660,     4.625],
/* 11 */  [ 1,     18.0,     0.009,    0.641,     5.047],
/* 12 */  [ 1,     18.0,     0.009,    0.600,     5.438],
/* 13 */  [ 1,     18.0,     0.009,    0.584,     5.828],
/* 14 */  [ 1,     12.0,     0.009,    0.532,     6.188],
/* 15 */  [ 1,     12.0,     0.009,    0.537,     6.522],
/* 16 */  [ 2,      6.0,     0.018,    0.857,     7.174],
/* 17 */  [ 2,      6.0,     0.018,    0.858,     7.801],
/* 18 */  [ 2,      3.0,     0.018,    0.853,     8.402],
/* 19 */  [ 2,      3.0,     0.018,    0.824,     8.966],
/* 20 */  [ 2,      3.0,     0.018,    0.778,     9.484],
/* 21 */  [ 2,      3.0,     0.018,    0.740,     9.966],
/* 22 */  [ 2,      0.0,     0.018,    0.709,    10.426],
/* 23 */  [ 2,      0.0,     0.018,    0.676,    10.866],
/* 24 */  [ 2,      0.0,     0.018,    0.632,    11.279],
/* 25 */  [ 2,      0.0,     0.018,    0.592,    11.669],
/* 26 */  [ 2,      0.0,     0.018,    0.553,    12.042],
/* 27 */  [ 2,      0.0,     0.018,    0.510,    12.386],
/* 28 */  [ 2,      0.0,     0.018,    0.513,    12.721],
/* 29 */  [ 3,      0.0,     0.027,    0.608,    13.115],
/* 30 */  [ 3,      0.0,     0.027,    0.673,    13.562],
/* 31 */  [ 3,      0.0,     0.027,    0.637,    13.984],
/* 32 */  [ 3,      0.0,     0.027,    0.586,    14.371],
/* 33 */  [ 3,      0.0,     0.027,    0.571,    14.741],
/* 34 */  [ 4,      0.0,     0.036,    0.616,    15.140],
/* 35 */  [ 4,      0.0,     0.036,    0.640,    15.563],
/* 36 */  [ 4,      0.0,     0.036,    0.598,    15.962],
/* 37 */  [ 4,      0.0,     0.036,    0.538,    16.324],
/* 38 */  [ 4,      0.0,     0.036,    0.512,    16.665],
/* 39 */  [ 5,      0.0,     0.045,    0.528,    17.020],
/* 40 */  [ 5,      0.0,     0.045,    0.517,    17.373],
/* 41 */  [ 5,      0.0,     0.045,    0.493,    17.708],
/* 42 */  [ 6,      0.0,     0.054,    0.499,    18.045],
/* 43 */  [ 7,      0.0,     0.063,    0.525,    18.398],
/* 44 */  [ 7,      0.0,     0.063,    0.541,    18.762],
/* 45 */  [ 8,      0.0,     0.072,    0.528,    19.120],
/* 46 */  [ 8,      0.0,     0.072,    0.510,    19.466],
/* 47 */  [ 8,      0.0,     0.072,    0.506,    19.807],
/* 48 */  [10,      0.0,     0.180,    0.525,    20.159],
/* 49 */  [10,      0.0,     0.180,    0.536,    20.522],
/* 50 */  [10,      0.0,     0.180,    0.518,    20.874],
/* 51 */  [13,      0.0,     0.372,    0.501,    21.214],
/* 52 */  [13,      0.0,     0.372,    0.497,    21.553],
/* 53 */  [14,      0.0,     0.400,    0.497,    21.892],
/* 54 */  [18,      0.0,     1.627,    0.495,    22.231],
/* 55 */  [18,      0.0,     1.627,    0.494,    22.569],
/* 56 */  [20,      0.0,     1.808,    0.497,    22.909],
/* 57 */  [25,      0.0,    22.607,    0.494,    23.248],
/* 58 */  [25,      0.0,    22.607,    0.487,    23.583],
/* 59 */  [35,      0.0,    31.650,    0.483,    23.915],
/* 60 */  [67,      0.0,   605.867,    0.482,    24.246],
/* 61 */  [67,      0.0,   605.867,    0.524,    24.576]
        ],

        // 48000Hz, Short Blocks
        [
        //  lines   qthr      norm     SNR         bval
/*  0 */  [ 1,      4.532,    1.000,   -8.240,     0.000],
/*  1 */  [ 1,      0.904,    0.989,   -8.240,     1.875],
/*  2 */  [ 1,      0.029,    0.989,   -8.240,     3.750],
/*  3 */  [ 1,      0.009,    0.981,   -8.240,     5.438],
/*  4 */  [ 1,      0.009,    0.985,   -8.240,     6.857],
/*  5 */  [ 1,      0.009,    0.984,   -8.240,     8.109],
/*  6 */  [ 1,      0.009,    0.980,   -8.240,     9.237],
/*  7 */  [ 1,      0.009,    0.968,   -8.240,    10.202],
/*  8 */  [ 1,      0.009,    0.954,   -8.240,    11.083],
/*  9 */  [ 1,      0.009,    0.929,   -8.240,    11.865],
/* 10 */  [ 1,      0.009,    0.906,   -7.447,    12.554],
/* 11 */  [ 1,      0.009,    0.883,   -7.447,    13.195],
/* 12 */  [ 1,      0.009,    0.844,   -7.447,    13.781],
/* 13 */  [ 1,      0.009,    0.792,   -7.447,    14.309],
/* 14 */  [ 1,      0.009,    0.747,   -7.447,    14.803],
/* 15 */  [ 1,      0.009,    0.689,   -7.447,    15.250],
/* 16 */  [ 1,      0.009,    0.644,   -7.447,    15.667],
/* 17 */  [ 1,      0.009,    0.592,   -7.447,    16.068],
/* 18 */  [ 1,      0.009,    0.553,   -7.447,    16.409],
/* 19 */  [ 2,      0.018,    0.850,   -7.447,    17.045],
/* 20 */  [ 2,      0.018,    0.811,   -6.990,    17.607],
/* 21 */  [ 2,      0.018,    0.736,   -6.990,    18.097],
/* 22 */  [ 2,      0.018,    0.665,   -6.990,    18.528],
/* 23 */  [ 2,      0.018,    0.610,   -6.990,    18.931],
/* 24 */  [ 2,      0.018,    0.544,   -6.990,    19.295],
/* 25 */  [ 2,      0.018,    0.528,   -6.990,    19.636],
/* 26 */  [ 3,      0.054,    0.621,   -6.990,    20.038],
/* 27 */  [ 3,      0.054,    0.673,   -6.990,    20.486],
/* 28 */  [ 3,      0.054,    0.635,   -6.990,    20.900],
/* 29 */  [ 4,      0.114,    0.626,   -6.990,    21.306],
/* 30 */  [ 4,      0.114,    0.636,   -6.020,    21.722],
/* 31 */  [ 5,      0.452,    0.615,   -6.020,    22.128],
/* 32 */  [ 5,      0.452,    0.579,   -6.020,    22.513],
/* 33 */  [ 5,      0.452,    0.551,   -6.020,    22.877],
/* 34 */  [ 7,      6.330,    0.552,   -5.229,    23.241],
/* 35 */  [ 7,      6.330,    0.559,   -5.229,    23.616],
/* 36 */  [11,      9.947,    0.528,   -5.229,    23.974],
/* 37 */  [17,    153.727,    0.479,   -5.229,    24.313]
        ]
    ]
];


// Table C.8 [SampleRateIndex][BlockType][ScalefactorBandIndex]
const PAM_TABLES_C8 = [

    // 32000Hz
    [
        // 32000Hz, Long Blocks
        [
// sb      cbw  bu   bo     w1       w2
/*  0 */  [1,    0,   2,    1.000,   0.528],
/*  1 */  [2,    2,   4,    0.472,   0.305],
/*  2 */  [2,    4,   6,    0.694,   0.083],
/*  3 */  [1,    6,   7,    0.917,   0.861],
/*  4 */  [2,    7,   9,    0.139,   0.639],
/*  5 */  [2,    9,  11,    0.361,   0.417],
/*  6 */  [3,   11,  14,    0.583,   0.083],
/*  7 */  [2,   14,  16,    0.917,   0.750],
/*  8 */  [3,   16,  19,    0.250,   0.870],
/*  9 */  [3,   19,  22,    0.130,   0.833],
/* 10 */  [4,   22,  26,    0.167,   0.389],
/* 11 */  [4,   26,  30,    0.611,   0.478],
/* 12 */  [4,   30,  34,    0.522,   0.033],
/* 13 */  [3,   34,  37,    0.967,   0.917],
/* 14 */  [4,   37,  41,    0.083,   0.617],
/* 15 */  [3,   41,  44,    0.383,   0.995],
/* 16 */  [4,   44,  48,    0.005,   0.274],
/* 17 */  [3,   48,  51,    0.726,   0.480],
/* 18 */  [3,   51,  54,    0.519,   0.261],
/* 19 */  [2,   54,  56,    0.739,   0.884],
/* 20 */  [2,   56,  58,    0.116,   1.000]
        ],

        // 32000Hz, Short Blocks
        [
// sb      cbw  bu   bo     w1       w2
/*  0 */  [2,    0,   2,    1.000,   0.167],
/*  1 */  [2,    3,   5,    0.833,   0.833],
/*  2 */  [3,    5,   8,    0.167,   0.500],
/*  3 */  [3,    8,  11,    0.500,   0.167],
/*  4 */  [4,   11,  15,    0.833,   0.167],
/*  5 */  [5,   15,  20,    0.833,   0.250],
/*  6 */  [4,   20,  24,    0.750,   0.250],
/*  7 */  [5,   24,  29,    0.750,   0.055],
/*  8 */  [4,   29,  33,    0.944,   0.375],
/*  9 */  [4,   33,  37,    0.625,   0.472],
/* 10 */  [3,   37,  40,    0.528,   0.937],
/* 11 */  [1,   40,  41,    0.062,   1.000]
        ]
    ],

    // 44100Hz
    [
        // 44100Hz, Long Blocks
        [
// sb      cbw  bu   bo     w1       w2
/*  0 */  [3,    0,   4,    1.000,   0.056],
/*  1 */  [3,    4,   7,    0.944,   0.611],
/*  2 */  [4,    7,  11,    0.389,   0.167],
/*  3 */  [3,   11,  14,    0.833,   0.722],
/*  4 */  [3,   14,  17,    0.278,   0.139],
/*  5 */  [1,   17,  18,    0.861,   0.917],
/*  6 */  [3,   18,  21,    0.083,   0.583],
/*  7 */  [3,   21,  24,    0.417,   0.250],
/*  8 */  [3,   24,  27,    0.750,   0.805],
/*  9 */  [3,   27,  30,    0.194,   0.574],
/* 10 */  [3,   30,  33,    0.426,   0.537],
/* 11 */  [3,   33,  36,    0.463,   0.819],
/* 12 */  [4,   36,  40,    0.180,   0.100],
/* 13 */  [3,   40,  43,    0.900,   0.468],
/* 14 */  [3,   43,  46,    0.532,   0.623],
/* 15 */  [3,   46,  49,    0.376,   0.450],
/* 16 */  [3,   49,  52,    0.550,   0.552],
/* 17 */  [3,   52,  55,    0.448,   0.403],
/* 18 */  [2,   55,  57,    0.597,   0.643],
/* 19 */  [2,   57,  59,    0.357,   0.722],
/* 20 */  [2,   59,  61,    0.278,   0.960]
        ],

        // 44100Hz, Short Blocks
        [
// sb      cbw  bu   bo     w1       w2
/*  0 */  [2,    0,   2,    1.000,   0.167],
/*  1 */  [2,    3,   5,    0.833,   0.833],
/*  2 */  [3,    5,   8,    0.167,   0.500],
/*  3 */  [3,    8,  11,    0.500,   0.167],
/*  4 */  [4,   11,  15,    0.833,   0.167],
/*  5 */  [5,   15,  20,    0.833,   0.250],
/*  6 */  [3,   20,  23,    0.750,   0.583],
/*  7 */  [4,   23,  27,    0.417,   0.055],
/*  8 */  [3,   27,  30,    0.944,   0.375],
/*  9 */  [3,   30,  33,    0.625,   0.300],
/* 10 */  [3,   33,  36,    0.700,   0.167],
/* 11 */  [2,   36,  38,    0.833,   1.000]
        ]
    ],

    // 48000Hz
    [
        // 48000Hz, Long Blocks
        [
// sb      cbw  bu   bo     w1       w2
/*  0 */  [3,    0,    4,   1.000,   0.056],
/*  1 */  [3,    4,    7,   0.944,   0.611],
/*  2 */  [4,    7,   11,   0.389,   0.167],
/*  3 */  [3,   11,   14,   0.833,   0.722],
/*  4 */  [3,   14,   17,   0.278,   0.639],
/*  5 */  [2,   17,   19,   0.361,   0.417],
/*  6 */  [3,   19,   22,   0.583,   0.083],
/*  7 */  [2,   22,   24,   0.917,   0.750],
/*  8 */  [3,   24,   27,   0.250,   0.417],
/*  9 */  [3,   27,   30,   0.583,   0.648],
/* 10 */  [3,   30,   33,   0.352,   0.611],
/* 11 */  [3,   33,   36,   0.389,   0.625],
/* 12 */  [4,   36,   40,   0.375,   0.144],
/* 13 */  [3,   40,   43,   0.856,   0.389],
/* 14 */  [3,   43,   46,   0.611,   0.160],
/* 15 */  [3,   46,   49,   0.840,   0.217],
/* 16 */  [3,   49,   52,   0.783,   0.184],
/* 17 */  [2,   52,   54,   0.816,   0.886],
/* 18 */  [3,   54,   57,   0.114,   0.313],
/* 19 */  [2,   57,   59,   0.687,   0.452],
/* 20 */  [1,   59,   60,   0.548,   0.908]
        ],

        // 48000Hz, Short Blocks
        [
// sb      cbw  bu   bo     w1       w2
/*  0 */  [2,    0,   2,    1.000,   0.167],
/*  1 */  [2,    3,   5,    0.833,   0.833],
/*  2 */  [3,    5,   8,    0.167,   0.500],
/*  3 */  [3,    8,  11,    0.500,   0.167],
/*  4 */  [4,   11,  15,    0.833,   0.167],
/*  5 */  [4,   15,  19,    0.833,   0.583],
/*  6 */  [3,   19,  22,    0.417,   0.917],
/*  7 */  [4,   22,  26,    0.083,   0.944],
/*  8 */  [4,   26,  30,    0.055,   0.042],
/*  9 */  [2,   30,  32,    0.958,   0.567],
/* 10 */  [3,   32,  35,    0.433,   0.167],
/* 11 */  [2,   35,  37,    0.833,   0.618]
        ]
    ]
];






// 以下是标准附录D提供的（部分）参数，在Layer3编码器中并未使用。

// Table D.3
const THRESHOLD_CALCULATION_PARTITIONS = [
    // 32kHz
    [
                //   wlow,   whigh,  bval,     minval,   TMN
                    [0,      0,      0,        0,        0   ],
        /* 1  */    [1,      1,      0.00,     0.0,      24.5],
        /* 2  */    [2,      4,      0.63,     0.0,      24.5],
        /* 3  */    [5,      7,      1.56,     20.0,     24.5],
        /* 4  */    [8,      10,     2.50,     20.0,     24.5],
        /* 5  */    [11,     13,     3.44,     20.0,     24.5],
        /* 6  */    [14,     16,     4.34,     20.0,     24.5],
        /* 7  */    [17,     19,     5.17,     20.0,     24.5],
        /* 8  */    [20,     22,     5.94,     20.0,     24.5],
        /* 9  */    [23,     25,     6.63,     17.0,     24.5],
        /* 10 */    [26,     28,     7.28,     15.0,     24.5],
        /* 11 */    [29,     31,     7.90,     15.0,     24.5],
        /* 12 */    [32,     34,     8.50,     10.0,     24.5],
        /* 13 */    [35,     37,     9.06,     7.0,      24.5],
        /* 14 */    [38,     41,     9.65,     7.0,      24.5],
        /* 15 */    [42,     45,     10.28,    4.4,      24.8],
        /* 16 */    [46,     49,     10.87,    4.4,      25.4],
        /* 17 */    [50,     53,     11.41,    4.5,      25.9],
        /* 18 */    [54,     57,     11.92,    4.5,      26.4],
        /* 19 */    [58,     61,     12.39,    4.5,      26.9],
        /* 20 */    [62,     65,     12.83,    4.5,      27.3],
        /* 21 */    [66,     70,     13.29,    4.5,      27.8],
        /* 22 */    [71,     75,     13.78,    4.5,      28.3],
        /* 23 */    [76,     81,     14.27,    4.5,      28.8],
        /* 24 */    [82,     87,     14.76,    4.5,      29.3],
        /* 25 */    [88,     93,     15.22,    4.5,      29.7],
        /* 26 */    [94,     99,     15.63,    4.5,      30.1],
        /* 27 */    [100,    106,    16.06,    4.5,      30.6],
        /* 28 */    [107,    113,    16.47,    4.5,      31.0],
        /* 29 */    [114,    120,    16.86,    4.5,      31.4],
        /* 30 */    [121,    129,    17.25,    4.5,      31.8],
        /* 31 */    [130,    138,    17.65,    4.5,      32.2],
        /* 32 */    [139,    148,    18.05,    4.5,      32.5],
        /* 33 */    [149,    159,    18.42,    4.5,      32.9],
        /* 34 */    [160,    170,    18.81,    4.5,      33.3],
        /* 35 */    [171,    183,    19.18,    4.5,      33.7],
        /* 36 */    [184,    196,    19.55,    4.5,      34.1],
        /* 37 */    [197,    210,    19.93,    4.5,      34.4],
        /* 38 */    [211,    225,    20.29,    4.5,      34.8],
        /* 39 */    [226,    240,    20.65,    4.5,      35.2],
        /* 40 */    [241,    258,    21.02,    4.5,      35.5],
        /* 41 */    [259,    279,    21.38,    4.5,      35.9],
        /* 42 */    [280,    300,    21.74,    4.5,      36.2],
        /* 43 */    [301,    326,    22.10,    4.5,      36.6],
        /* 44 */    [327,    354,    22.44,    4.5,      36.9],
        /* 45 */    [355,    382,    22.79,    4.5,      37.3],
        /* 46 */    [383,    420,    23.14,    4.5,      37.6],
        /* 47 */    [421,    458,    23.49,    4.5,      38.0],
        /* 48 */    [459,    496,    23.83,    4.5,      38.3],
        /* 49 */    [497,    513,    24.07,    4.5,      38.6]
    ],

    // 44.1kHz
    [
                //   wlow,   whigh,  bval,     minval,   TMN
                    [0,      0,      0,        0,        0   ],
        /* 1  */    [1,      1,      0.00,     0.0,      24.5],
        /* 2  */    [2,      2,      0.43,     0.0,      24.5],
        /* 3  */    [3,      3,      0.86,     0.0,      24.5],
        /* 4  */    [4,      4,      1.29,     20.0,     24.5],
        /* 5  */    [5,      5,      1.72,     20.0,     24.5],
        /* 6  */    [6,      6,      2.15,     20.0,     24.5],
        /* 7  */    [7,      7,      2.58,     20.0,     24.5],
        /* 8  */    [8,      8,      3.01,     20.0,     24.5],
        /* 9  */    [9,      9,      3.45,     20.0,     24.5],
        /* 10 */    [10,     10,     3.88,     20.0,     24.5],
        /* 11 */    [11,     11,     4.28,     20.0,     24.5],
        /* 12 */    [12,     12,     4.67,     20.0,     24.5],
        /* 13 */    [13,     13,     5.06,     20.0,     24.5],
        /* 14 */    [14,     14,     5.42,     20.0,     24.5],
        /* 15 */    [15,     15,     5.77,     20.0,     24.5],
        /* 16 */    [16,     16,     6.11,     17.0,     24.5],
        /* 17 */    [17,     19,     6.73,     17.0,     24.5],
        /* 18 */    [20,     22,     7.61,     15.0,     24.5],
        /* 19 */    [23,     25,     8.44,     10.0,     24.5],
        /* 20 */    [26,     28,     9.21,     7.0,      24.5],
        /* 21 */    [29,     31,     9.88,     7.0,      24.5],
        /* 22 */    [32,     34,     10.51,    4.4,      25.0],
        /* 23 */    [35,     37,     11.11,    4.5,      25.6],
        /* 24 */    [38,     40,     11.65,    4.5,      26.2],
        /* 25 */    [41,     44,     12.24,    4.5,      26.7],
        /* 26 */    [45,     48,     12.85,    4.5,      27.4],
        /* 27 */    [49,     52,     13.41,    4.5,      27.9],
        /* 28 */    [53,     56,     13.94,    4.5,      28.4],
        /* 29 */    [57,     60,     14.42,    4.5,      28.9],
        /* 30 */    [61,     64,     14.86,    4.5,      29.4],
        /* 31 */    [65,     69,     15.32,    4.5,      29.8],
        /* 32 */    [70,     74,     15.79,    4.5,      30.3],
        /* 33 */    [75,     80,     16.26,    4.5,      30.8],
        /* 34 */    [81,     86,     16.73,    4.5,      31.2],
        /* 35 */    [87,     93,     17.19,    4.5,      31.7],
        /* 36 */    [94,     100,    17.62,    4.5,      32.1],
        /* 37 */    [101,    108,    18.05,    4.5,      32.5],
        /* 38 */    [109,    116,    18.45,    4.5,      32.9],
        /* 39 */    [117,    124,    18.83,    4.5,      33.3],
        /* 40 */    [125,    134,    19.21,    4.5,      33.7],
        /* 41 */    [135,    144,    19.60,    4.5,      34.1],
        /* 42 */    [145,    155,    20.00,    4.5,      34.5],
        /* 43 */    [156,    166,    20.38,    4.5,      34.9],
        /* 44 */    [167,    177,    20.74,    4.5,      35.2],
        /* 45 */    [178,    192,    21.12,    4.5,      35.6],
        /* 46 */    [193,    207,    21.48,    4.5,      36.0],
        /* 47 */    [208,    222,    21.84,    4.5,      36.3],
        /* 48 */    [223,    243,    22.20,    4.5,      36.7],
        /* 49 */    [244,    264,    22.56,    4.5,      37.1],
        /* 50 */    [265,    286,    22.91,    4.5,      37.4],
        /* 51 */    [287,    314,    23.26,    4.5,      37.8],
        /* 52 */    [315,    342,    23.60,    4.5,      38.1],
        /* 53 */    [343,    371,    23.95,    4.5,      38.4],
        /* 54 */    [372,    401,    24.30,    4.5,      38.8],
        /* 55 */    [402,    431,    24.65,    4.5,      39.1],
        /* 56 */    [432,    469,    25.00,    4.5,      39.5],
        /* 57 */    [470,    513,    25.33,    3.5,      39.8]
    ],

    // 48kHz
    [
                //   wlow,   whigh,  bval,     minval,   TMN
                    [0,      0,      0,        0,        0   ],
        /* 1  */    [1,      1,      0.00,     0.0,      24.5],
        /* 2  */    [2,      2,      0.47,     0.0,      24.5],
        /* 3  */    [3,      3,      0.94,     0.0,      24.5],
        /* 4  */    [4,      4,      1.41,     20.0,     24.5],
        /* 5  */    [5,      5,      1.88,     20.0,     24.5],
        /* 6  */    [6,      6,      2.34,     20.0,     24.5],
        /* 7  */    [7,      7,      2.81,     20.0,     24.5],
        /* 8  */    [8,      8,      3.28,     20.0,     24.5],
        /* 9  */    [9,      9,      3.75,     20.0,     24.5],
        /* 10 */    [10,     10,     4.20,     20.0,     24.5],
        /* 11 */    [11,     11,     4.63,     20.0,     24.5],
        /* 12 */    [12,     12,     5.05,     20.0,     24.5],
        /* 13 */    [13,     13,     5.44,     20.0,     24.5],
        /* 14 */    [14,     14,     5.83,     20.0,     24.5],
        /* 15 */    [15,     15,     6.19,     20.0,     24.5],
        /* 16 */    [16,     16,     6.52,     17.0,     24.5],
        /* 17 */    [17,     17,     6.86,     17.0,     24.5],
        /* 18 */    [18,     20,     7.49,     15.0,     24.5],
        /* 19 */    [21,     23,     8.40,     10.0,     24.5],
        /* 20 */    [24,     26,     9.24,     7.0,      24.5],
        /* 21 */    [27,     29,     9.97,     7.0,      24.5],
        /* 22 */    [30,     32,     10.65,    4.4,      25.1],
        /* 23 */    [33,     35,     11.28,    4.5,      25.8],
        /* 24 */    [36,     38,     11.86,    4.5,      26.4],
        /* 25 */    [39,     41,     12.39,    4.5,      26.9],
        /* 26 */    [42,     45,     12.96,    4.5,      27.5],
        /* 27 */    [46,     49,     13.56,    4.5,      28.1],
        /* 28 */    [50,     53,     14.12,    4.5,      28.6],
        /* 29 */    [54,     57,     14.62,    4.5,      29.1],
        /* 30 */    [58,     62,     15.14,    4.5,      29.6],
        /* 31 */    [63,     67,     15.67,    4.5,      30.2],
        /* 32 */    [68,     72,     16.15,    4.5,      30.7],
        /* 33 */    [73,     77,     16.58,    4.5,      31.1],
        /* 34 */    [78,     83,     17.02,    4.5,      31.5],
        /* 35 */    [84,     89,     17.44,    4.5,      31.9],
        /* 36 */    [90,     95,     17.84,    4.5,      32.3],
        /* 37 */    [96,     103,    18.24,    4.5,      32.7],
        /* 38 */    [104,    111,    18.66,    4.5,      33.2],
        /* 39 */    [112,    120,    19.07,    4.5,      33.6],
        /* 40 */    [121,    129,    19.47,    4.5,      34.0],
        /* 41 */    [130,    138,    19.85,    4.5,      34.3],
        /* 42 */    [139,    149,    20.23,    4.5,      34.7],
        /* 43 */    [150,    160,    20.63,    4.5,      35.1],
        /* 44 */    [161,    173,    21.02,    4.5,      35.5],
        /* 45 */    [174,    187,    21.40,    4.5,      35.9],
        /* 46 */    [188,    201,    21.76,    4.5,      36.3],
        /* 47 */    [202,    219,    22.12,    4.5,      36.6],
        /* 48 */    [220,    238,    22.47,    4.5,      37.0],
        /* 49 */    [239,    257,    22.83,    4.5,      37.3],
        /* 50 */    [258,    283,    23.18,    4.5,      37.7],
        /* 51 */    [284,    309,    23.53,    4.5,      38.0],
        /* 52 */    [310,    335,    23.88,    4.5,      38.4],
        /* 53 */    [336,    363,    24.23,    4.5,      38.7],
        /* 54 */    [364,    391,    24.58,    4.5,      39.1],
        /* 55 */    [392,    423,    24.93,    4.5,      39.4],
        /* 56 */    [424,    465,    25.27,    4.5,      39.8],
        /* 57 */    [466,    507,    25.61,    3.5,      40.1],
        /* 58 */    [508,    513,    25.81,    3.5,      40.3]
    ]
];
